[
    {
        "id": "6e2de0a8.936f6",
        "type": "tab",
        "label": "GeyserWorx Testing",
        "disabled": false,
        "info": "gwCECC50E32854A4"
    },
    {
        "id": "11c86329.c3b39d",
        "type": "tab",
        "label": "Charts",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f66f1d13.6d699",
        "type": "tab",
        "label": "Timer",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9a41cfce.1af98",
        "type": "tab",
        "label": "Weather",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ce755ade.782f08",
        "type": "tab",
        "label": "System",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3c1a9880.5362b8",
        "type": "subflow",
        "name": "Set Coords",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 540,
                "y": 100,
                "wires": [
                    {
                        "id": "e4984393.2e0f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 100,
                "wires": [
                    {
                        "id": "e4984393.2e0f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "20f5b48f.283ffc",
        "type": "subflow",
        "name": "Timer Settings (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 500,
                "y": 320,
                "wires": [
                    {
                        "id": "dd09ea56.667bf8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 740,
                "y": 320,
                "wires": [
                    {
                        "id": "dd09ea56.667bf8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TimerNumber",
                "type": "num",
                "value": ""
            },
            {
                "name": "PayloadON",
                "type": "str",
                "value": ""
            },
            {
                "name": "PayloadOFF",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "ff42fe15.c67d18",
        "type": "subflow",
        "name": "FIFO",
        "info": "# FIFO\n## First in First Out subflow\nThis flow receives a series of msg.payloads and builds a queue using FIFO (First in First out) method. The LIFO size is configurabe through subflow enviroment variables.\n\n### Input\n`msg.topic == put`\nWill add the `msg.payload` to the end of the array. Everytime a new item is received the second output sends the complete queue.\n\n`msg.topic == get`\nWill remove the first item of the stack and will send it in the first output\n\n`msg.topic == list`\nSends the complete list on the second output.\n\n### Output 1\nThe first item on the top of the stack. It is sent only when `msg.topic == get`.\n\n### Output 2\nThe complete queue in Array format. It is sent everytime a new item is added, removed or when `msg.topic == list`\n\n### Status\nAlways show the queue size.\n\n### Enviroment Variables\n`Buffer_Size` defines the size of the queue. If a new item arrives and the queue is full, the oldest item will be removed.",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 120,
                "wires": [
                    {
                        "id": "5a2c134e.6e17fc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 720,
                "y": 60,
                "wires": [
                    {
                        "id": "27329d87.2ea272",
                        "port": 0
                    },
                    {
                        "id": "1e88264c.c3eb42",
                        "port": 0
                    }
                ]
            },
            {
                "x": 760,
                "y": 200,
                "wires": [
                    {
                        "id": "eb8ef779.5af3c8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Buffer_Size",
                "type": "num",
                "value": "6"
            }
        ],
        "icon": "font-awesome/fa-ellipsis-v",
        "status": {
            "x": 940,
            "y": 120,
            "wires": [
                {
                    "id": "80547902.274c88",
                    "port": 0
                },
                {
                    "id": "8e4f0460.903db8",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "6292787f.d2f758",
        "type": "subflow",
        "name": "RPi Mon",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 720,
                "y": 80,
                "wires": [
                    {
                        "id": "d7018347.6aae6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 580,
                "y": 140,
                "wires": [
                    {
                        "id": "b0595154.a54c9",
                        "port": 0
                    }
                ]
            },
            {
                "x": 580,
                "y": 200,
                "wires": [
                    {
                        "id": "b731d415.ccff98",
                        "port": 0
                    }
                ]
            },
            {
                "x": 720,
                "y": 260,
                "wires": [
                    {
                        "id": "fb7d998c.c1a528",
                        "port": 0
                    }
                ]
            },
            {
                "x": 580,
                "y": 320,
                "wires": [
                    {
                        "id": "5547a768.68c208",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "ad85cd.dcf08a3",
        "type": "subflow",
        "name": "Evacuation Timer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 140,
                "wires": [
                    {
                        "id": "45fe8683.ede378"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 140,
                "wires": [
                    {
                        "id": "265192c1.e0226e",
                        "port": 0
                    },
                    {
                        "id": "c2d9f840.72ff68",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "ea070992.9873a8",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "samworx.dedicated.co.za",
        "port": "1883",
        "clientid": "localhost_testing",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d746eaa8.c41a38",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "76347d9a.2c0094",
        "type": "MSSQL-UCGv2-CN",
        "z": "",
        "name": "SQL",
        "server": "192.168.1.25",
        "port": "1433",
        "encyption": false,
        "database": "30Snipe",
        "pool": "32",
        "connectionTimeout": "16000",
        "requestTimeout": "15000"
    },
    {
        "id": "6f4991fa.a7d08",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e55ad75.a83bc28",
        "type": "ui_tab",
        "z": "",
        "name": "GeyserWorx",
        "icon": "fa-shower",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fbbc4141.094d",
        "type": "ui_group",
        "z": "",
        "name": "Dashboard",
        "tab": "e55ad75.a83bc28",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fe1ee148.0ce71",
        "type": "ui_group",
        "z": "",
        "name": "Settings",
        "tab": "e55ad75.a83bc28",
        "order": 2,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "44d9222c.07961c",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "f779dd92.cf698",
        "order": 2,
        "disp": false,
        "width": "6"
    },
    {
        "id": "afe97566.fbda58",
        "type": "ui_group",
        "z": "",
        "name": "Inputs",
        "tab": "f779dd92.cf698",
        "order": 1,
        "disp": false,
        "width": "6"
    },
    {
        "id": "ef33233b.dd28f",
        "type": "ui_group",
        "z": "",
        "name": "Group 3",
        "tab": "f779dd92.cf698",
        "order": 3,
        "disp": false,
        "width": "6"
    },
    {
        "id": "f779dd92.cf698",
        "type": "ui_tab",
        "z": "",
        "name": "Charts",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "c467b276.39485",
        "type": "ui_group",
        "z": "",
        "name": "Outside",
        "tab": "4bb34f67.69a87",
        "order": 2,
        "disp": true,
        "width": "7"
    },
    {
        "id": "171132c7.ece67d",
        "type": "mqtt-broker",
        "z": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b662ff46.2c09c",
        "type": "ui_group",
        "z": "",
        "name": "Entry Light - Evening",
        "tab": "6ebdd0fe.aa309",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "70fb931.dfc146c",
        "type": "ui_group",
        "z": "",
        "name": "MainGroup",
        "tab": "4bb34f67.69a87",
        "order": 1,
        "disp": false,
        "width": 10,
        "collapse": false
    },
    {
        "id": "4bb34f67.69a87",
        "type": "ui_tab",
        "z": "",
        "name": "Weather",
        "icon": "fa-thermometer-half",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7475a065.6e5cf8",
        "type": "ui_group",
        "z": "",
        "name": "Paddenstoel timer",
        "tab": "6ebdd0fe.aa309",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "6ebdd0fe.aa309",
        "type": "ui_tab",
        "z": "",
        "name": "Timers",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4b06aebc.6129",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Time Clock",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "35aebfde.5596b",
        "type": "ui_group",
        "z": "",
        "name": "Clock",
        "tab": "6f4991fa.a7d08",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6952e3f6.75037c",
        "type": "debug",
        "z": "6e2de0a8.936f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 80,
        "wires": []
    },
    {
        "id": "c49c78f7.8bebe8",
        "type": "inject",
        "z": "6e2de0a8.936f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "gwCECC50E32854A4",
        "payloadType": "str",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "ec7a891a.9977a8"
            ]
        ]
    },
    {
        "id": "ec7a891a.9977a8",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "flow.set(\"unit\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e58386ab.8fd6d8",
        "type": "mqtt-in-dynamicsub",
        "z": "6e2de0a8.936f6",
        "name": "",
        "qos": "2",
        "datatype": "json",
        "unsubscribe-after-first-msg-recv": false,
        "debug-subscribe": false,
        "broker": "ea070992.9873a8",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "3b16a50a.25a6da"
            ]
        ]
    },
    {
        "id": "87ca802e.e8dc3",
        "type": "inject",
        "z": "6e2de0a8.936f6",
        "name": "",
        "props": [
            {
                "p": "topic",
                "v": "unit",
                "vt": "flow"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "2acf6900.9a4388",
                "1f464150.6118ff"
            ]
        ]
    },
    {
        "id": "2acf6900.9a4388",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "Compile Topic",
        "func": "// GW/gwCECC50E32854A4/#\nvar unit = flow.get(\"unit\");\nmsg.topic = \"GW/\"+unit+\"/#\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 80,
        "wires": [
            [
                "e58386ab.8fd6d8"
            ]
        ]
    },
    {
        "id": "3b16a50a.25a6da",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "Process JSON",
        "func": "/*#################################################################################################################################################################################################\n\tGLOBAL VARIABLES\n#################################################################################################################################################################################################*/\n\t// Message Variables\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\tvar topic\t\t\t= msg.topic;\n\t\tvar payload\t\t\t= msg.payload;\t//\n\t\tvar unitID          = flow.get(\"unit\");\n\t\tmsg.payload         = null;\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\t// Topic Variables\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\tvar systemType\t\t= \"\";\t\t\t// GW\n\t\tvar systemID\t\t= \"\";\t\t\t// gw2E2C3AE83E76C0\n\t\tvar subID_1\t\t\t= \"\";\t\t\t// 1\n\t\tvar subID_2\t\t\t= \"\";\t\t\t// A\n\t\tvar subID_3\t\t\t= \"\";\t\t\t//\n\t\tvar subID_4\t\t\t= \"\";\t\t\t//\n\t\tvar subID_5\t\t\t= \"\";\t\t\t//\n\t\tvar subID_6\t\t\t= \"\";\t\t\t//\n\t\tvar subID_7\t\t\t= \"\";\t\t\t//\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\t// Index Variables\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\tvar topicLength\t\t= topic.length;\n\t\tvar topicSeperator\t= topic.indexOf(\"/\");\n\t\tvar indexGW_ID\t\t= -1;\n\t\tvar indexGW_Unit\t= -1;\n\t\tvar indexGW_Func\t= -1;\n\t\tvar index_5\t\t\t= -1;\n\t\tvar index_6\t\t\t= -1;\n\t\tvar index_7\t\t\t= -1;\n\t\tvar index_8\t\t\t= -1;\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\t// Memory Variables\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\tvar\t_unitID;\n\t\tvar\t_geyserDataSN;\n\t\tvar\t_geyserData;\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\t// Time & Date variables\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\tvar date\t\t\t= new Date();\n\n\t\tvar system_Year\t\t= String( date.getFullYear() );\n\t\tvar system_Month\t= String( date.getMonth() + 1 );\n\t\tvar system_Day\t\t= String( date.getDate() );\n\t\tvar system_Hour\t\t= String( date.getHours() );\n\t\tvar system_Minute\t= String( date.getMinutes() );\n\t\tvar system_Second\t= String( date.getSeconds() );\n\n\t\tsystem_Year\t\t\t= \"00\".substr(system_Year.length)\t\t+ system_Year;\n\t\tsystem_Month\t\t= \"00\".substr(system_Month.length)\t\t+ system_Month;\n\t\tsystem_Day\t\t\t= \"00\".substr(system_Day.length)\t\t+ system_Day;\n\t\tsystem_Hour\t\t\t= \"00\".substr(system_Hour.length)\t\t+ system_Hour;\n\t\tsystem_Minute\t\t= \"00\".substr(system_Minute.length)\t\t+ system_Minute;\n\t\tsystem_Second\t\t= \"00\".substr(system_Second.length)\t\t+ system_Second;\n\n\t\tvar system_time\t\t= system_Year + \"/\" + system_Month + \"/\" + system_Day + \" \" + system_Hour + \":\" + system_Minute;\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\t// Output Variables\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t// Output array\n\t\t//-----------------------------------------------------------------------------------------\n\t\t\tvar output\t\t= [];\n\t\t//-----------------------------------------------------------------------------------------\n\n\t\t// Output array components\n\t\t//-----------------------------------------------------------------------------------------\n\t\t\tvar output_sys_t;\n\t\t\tvar output_unitUpdate_CS\t= null;\n\t\t\tvar output_debug\t        = null;\n\t\t//-----------------------------------------------------------------------------------------\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n/*#################################################################################################################################################################################################\n\tFUNCTIONS\n#################################################################################################################################################################################################*/\n\t// Topic Breakdown\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\tsystemType\t= topic;\n\n\t\tif (topicSeperator >= 0)\n\t\t{\n\t\t\tsystemType\t= topic.slice(0, topicSeperator);\n\t\t\tsystemID\t= topic.slice(topicSeperator + 1);\n\n\t\t\tindexGW_ID\t\t= topic.indexOf(\"/\", topicSeperator + 1);\n\t\t\tif (indexGW_ID >= 0)\n\t\t\t{\n\t\t\t\tsystemID\t= topic.slice(topicSeperator + 1, indexGW_ID);\n\t\t\t\tsubID_1\t\t= topic.slice(indexGW_ID + 1);\n\n\t\t\t\tindexGW_Unit\t= topic.indexOf(\"/\", indexGW_ID + 1);\n\t\t\t\tif (indexGW_Unit >= 0)\n\t\t\t\t{\n\t\t\t\t\tsubID_1\t\t= topic.slice(indexGW_ID + 1, indexGW_Unit);\n\t\t\t\t\tsubID_2\t\t= topic.slice(indexGW_Unit + 1);\n\n\t\t\t\t\tindexGW_Func\t= topic.indexOf(\"/\", indexGW_Unit + 1);\n\t\t\t\t\tif (indexGW_Func >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsubID_2\t\t= topic.slice(indexGW_Unit + 1, indexGW_Func);\n\t\t\t\t\t\tsubID_3\t\t= topic.slice(indexGW_Func + 1);\n\n\t\t\t\t\t\tindex_5\t\t= topic.indexOf(\"/\", indexGW_Func + 1);\n\t\t\t\t\t\tif (index_5 >= 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsubID_3\t\t= topic.slice(indexGW_Func + 1, index_5);\n\t\t\t\t\t\t\tsubID_4\t\t= topic.slice(index_5 + 1);\n\n\t\t\t\t\t\t\tindex_6\t\t= topic.indexOf(\"/\", index_5 + 1);\n\t\t\t\t\t\t\tif (index_6 >= 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsubID_4\t\t= topic.slice(index_5 + 1, index_6);\n\t\t\t\t\t\t\t\tsubID_5\t\t= topic.slice(index_6 + 1);\n\n\t\t\t\t\t\t\t\tindex_7\t\t= topic.indexOf(\"/\", index_6 + 1);\n\t\t\t\t\t\t\t\tif (index_7 >= 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsubID_5\t\t= topic.slice(index_6 + 1, index_7);\n\t\t\t\t\t\t\t\t\tsubID_6\t\t= topic.slice(index_7 + 1);\n\n\t\t\t\t\t\t\t\t\tindex_8\t\t= topic.indexOf(\"/\", index_7 + 1);\n\t\t\t\t\t\t\t\t\tif (index_8 >= 0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tsubID_6\t\t= topic.slice(index_7 + 1, index_8);\n\t\t\t\t\t\t\t\t\t\tsubID_7\t\t= topic.slice(index_8 + 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\t// Contents Generation\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\tif( topicSeperator > -1 )\n\t\t{\n\t\t\tif( systemType === \"GW\" )\n\t\t\t{\n\t\t\t\tif( (indexGW_ID > -1)&&( indexGW_Unit > -1 )&&(systemID === unitID) )\n\t\t\t\t{\n\t\t\t\t    output_debug    = msg;\n\t\t\t\t\t_unitID\t\t\t= systemID;\n\t\t\t\t\t_geyserDataSN\t= \"_geyserTestData_gw2E2C3AE83E76C0\";\n\n\t\t\t\t\t_geyserData\t\t= global.get(_geyserDataSN)||{\n\t\t\t\t\t\t\t\t\t\t\"SN\":\t_unitID,\n\t\t\t\t\t\t\t\t\t\t\"CS\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\"S\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\"I\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\"t\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Y\":\tsystem_Year,\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\"M\":\tsystem_Month,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"D\":\tsystem_Day,\n\t\t\t\t\t\t\t\t\t\t\t    \t\t\"h\":\tsystem_Hour,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"m\":\tsystem_Minute,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"s\":\tsystem_Second\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\"A\":\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\"AVG\":\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\"G1\":{\n\t\t\t\t\t\t\t\t\t\t\t        \"T\":{\n        \t\t\t\t\t\t\t\t\t\t\t\t\"PCB\":\t\t\t0.0,\n        \t\t\t\t\t\t\t\t\t\t\t\t\"G\":\t\t\t0.0\n\t\t\t\t\t\t\t\t\t\t\t\t    },\n        \t\t\t\t\t\t\t\t\t\t\t\"I\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"AC\":\t\t0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PV\":\t\t0.0\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"V\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"AC\":\t\t0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PV\":\t\t0.0\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Pt\":\t{\n\t\t\t\t\t\t\t\t\t\t\t\t            \"Raw\":  {\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"I2AC\":\t0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"I2PV\":\t0.0\n\t\t\t\t\t\t\t\t\t\t\t                    },\n\t\t\t\t\t\t\t\t\t\t\t\t            \"kWh\":  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"AC\":\t0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PV\":\t0.0\n\t\t\t\t\t\t\t\t\t\t\t\t\t            }\n\t\t\t\t\t\t\t\t\t\t\t\t\t        },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"STS\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Tr_Th\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Tr_Te\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Tr_DR\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Tr_CS\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Tr_PCB\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"A_Sc\":\t    0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"A_An\":\t    0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"A_DT\":\t    0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"O_AC\":\t    0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"O_PV\":\t    0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"T\":        0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"H\":        0\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"SET\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"O\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"ACM\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"ACO\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"PVM\": 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"S\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"ACT\": 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"ACOT\": 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"PVT\": 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"ACCT\": 0.0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"A\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"DRT\": 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"SCB\": 0.0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\"G2\":{\n\t\t\t\t\t\t\t\t\t\t\t        \"T\":{\n        \t\t\t\t\t\t\t\t\t\t\t\t\"PCB\":\t\t\t0.0,\n        \t\t\t\t\t\t\t\t\t\t\t\t\"G\":\t\t\t0.0\n\t\t\t\t\t\t\t\t\t\t\t\t    },\n        \t\t\t\t\t\t\t\t\t\t\t\"I\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"AC\":\t\t0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PV\":\t\t0.0\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"V\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"AC\":\t\t0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PV\":\t\t0.0\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Pt\":\t{\n\t\t\t\t\t\t\t\t\t\t\t\t            \"Raw\":  {\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"I2AC\":\t0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"I2PV\":\t0.0\n\t\t\t\t\t\t\t\t\t\t\t                    },\n\t\t\t\t\t\t\t\t\t\t\t\t            \"kWh\":  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"AC\":\t0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PV\":\t0.0\n\t\t\t\t\t\t\t\t\t\t\t\t\t            }\n\t\t\t\t\t\t\t\t\t\t\t\t\t        },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"STS\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Tr_Th\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Tr_Te\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Tr_DR\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Tr_CS\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Tr_PCB\":\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"A_Sc\":\t    0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"A_An\":\t    0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"A_DT\":\t    0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"O_AC\":\t    0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"O_PV\":\t    0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"T\":        0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"H\":        0\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"SET\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"O\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"ACM\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"ACO\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"PVM\": 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"S\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"ACT\": 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"ACOT\": 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"PVT\": 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"ACCT\": 0.0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"A\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"DRT\": 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \"SCB\": 0.0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\n\t\t\t\t\tif( (subID_1 === \"S\")&&( subID_2 === \"CW\" ) )\n\t\t\t\t\t{\n\t\t\t\t\t\tif( ( _geyserData.CS.S !== payload.S )||( _geyserData.CS.I !== payload.I ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_geyserData.CS.S\t=\tpayload.S;\n\t\t\t\t\t\t\t_geyserData.CS.I\t=\tpayload.I;\n\t\t\t\t\t\t\t_geyserData.CS.t\t=\t{\n\t\t\t\t\t\t\t\t\t\t\t    \t\t\"Y\":\tsystem_Year,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"M\":\tsystem_Month,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"D\":\tsystem_Day,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"h\":\tsystem_Hour,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"m\":\tsystem_Minute,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"s\":\tsystem_Second\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                    else if( subID_1 === \"1\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tif( subID_2 === \"A\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif( \"T\" in payload )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif( \"G\" in payload.T  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G1.T.G\t= payload.T.G;\n\t\t\t\t\t\t\t\t\t_geyserData.A\t\t= true;\n\t\t\t\t\t\t\t\t\t_geyserData.AVG\t\t= true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif( \"PCB\" in payload.T  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G1.T.PCB\t\t= payload.T.PCB;\n\t\t\t\t\t\t\t\t\t_geyserData.A\t\t= true;\n\t\t\t\t\t\t\t\t\t_geyserData.AVG\t\t= true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif( \"I\" in payload )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif( \"AC\" in payload.I  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G1.I.AC\t\t= payload.I.AC;\n\t\t\t\t\t\t\t\t\t_geyserData.A\t\t= true;\n\t\t\t\t\t\t\t\t\t_geyserData.AVG\t\t= true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif( \"PV\" in payload.I  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G1.I.PV\t\t= payload.I.PV;\n\t\t\t\t\t\t\t\t\t_geyserData.A\t\t= true;\n\t\t\t\t\t\t\t\t\t_geyserData.AVG\t\t= true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( subID_2 === \"a\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif( \"I\" in payload )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif( \"AC\" in payload.I  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G1.Pt.Raw.I2AC\t= payload.I.AC;\n\t\t\t\t\t\t\t\t\t_geyserData.G1.Pt.kWh.AC\t= (payload.I.AC)*(230*230/3000)/1000;\n\t\t\t\t\t\t\t\t\t_geyserData.A\t\t= true;\n\t\t\t\t\t\t\t\t\t_geyserData.AVG\t\t= true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif( \"PV\" in payload.I  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G1.Pt.Raw.I2PV\t= payload.I.PV;\n\t\t\t\t\t\t\t\t\t_geyserData.G1.Pt.kWh.PV\t= (payload.I.PV)*(230*230/3000)/1000;\n\t\t\t\t\t\t\t\t\t_geyserData.A\t\t= true;\n\t\t\t\t\t\t\t\t\t_geyserData.AVG\t\t= true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( subID_2 === \"STS\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t    if( \"A\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        _geyserData.G1.STS.Tr_Th        = payload.A.Tr_Th;\n\t\t\t\t\t\t        _geyserData.G1.STS.Tr_Te        = payload.A.Tr_Te;\n\t\t\t\t\t\t        _geyserData.G1.STS.Tr_DR        = payload.A.Tr_DR;\n\t\t\t\t\t\t        _geyserData.G1.STS.Tr_CS        = payload.A.Tr_CS;\n\t\t\t\t\t\t        _geyserData.G1.STS.Tr_PCB       = payload.A.Tr_PCB;\n\t\t\t\t\t\t        _geyserData.G1.STS.A_Sc         = payload.A.A_Sc;\n\t\t\t\t\t\t        _geyserData.G1.STS.A_An         = payload.A.A_An;\n\t\t\t\t\t\t        _geyserData.G1.STS.A_DT         = payload.A.A_DT;\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    if( \"O\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        if(\"AC\" in payload.O)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.STS.O_AC     = payload.O.AC;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"PV\" in payload.O)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.STS.O_PV     = payload.O.PV;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    if(\"T\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        _geyserData.G1.STS.T            = payload.T;\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    if(\"H\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        _geyserData.G1.STS.H            = payload.H;\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (subID_2 === \"SET\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t    if(\"O\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        if(\"ACM\" in payload.O)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.SET.O.ACM    = payload.O.ACM;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"ACO\" in payload.O)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.SET.O.ACO    = payload.O.ACO;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"PVM\" in payload.O)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.SET.O.PVM    = payload.O.PVM;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    if(\"S\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        if(\"ACT\" in payload.S)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.SET.S.ACT        = payload.S.ACT;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"ACOT\" in payload.S)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.SET.S.ACOT        = payload.S.ACOT;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"PVT\" in payload.S)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.SET.S.PVT        = payload.S.PVT;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"ACCT\" in payload.S)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.SET.S.ACCT       = payload.S.ACCT;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    if(\"A\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        if(\"DRT\" in payload.A)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.SET.A.DRT        = payload.A.DRT;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"SCB\" in payload.A)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G1.SET.A.SCB        = payload.A.SCB;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}   // end if unit 1\n                    else if( subID_1 === \"2\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tif( subID_2 === \"A\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif( \"T\" in payload )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif( \"G\" in payload.T  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G2.T.G\t\t\t= payload.T.G;\n\t\t\t\t\t\t\t\t\t_geyserData.A\t\t= true;\n\t\t\t\t\t\t\t\t\t_geyserData.AVG\t\t= true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif( \"PCB\" in payload.T  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G2.T.PCB\t\t= payload.T.PCB;\n\t\t\t\t\t\t\t\t\t_geyserData.A\t\t= true;\n\t\t\t\t\t\t\t\t\t_geyserData.AVG\t\t= true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif( \"I\" in payload )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif( \"AC\" in payload.I  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G2.I.AC\t\t= payload.I.AC;\n\t\t\t\t\t\t\t\t\t_geyserData.A\t\t= true;\n\t\t\t\t\t\t\t\t\t_geyserData.AVG\t\t= true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif( \"PV\" in payload.I  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G2.I.PV\t\t= payload.I.PV;\n\t\t\t\t\t\t\t\t\t_geyserData.A\t\t= true;\n\t\t\t\t\t\t\t\t\t_geyserData.AVG\t\t= true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( subID_2 === \"a\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif( \"I\" in payload )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif( \"AC\" in payload.I  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G2.Pt.Raw.I2AC\t= payload.I.AC;\n\t\t\t\t\t\t\t\t\t_geyserData.G2.Pt.kWh.AC\t= (payload.I.AC)*(230*230/3000)/1000;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif( \"PV\" in payload.I  )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_geyserData.G2.Pt.Raw.I2PV\t= payload.I.PV;\n\t\t\t\t\t\t\t\t\t_geyserData.G2.Pt.kWh.PV\t= (payload.I.PV)*(230*230/3000)/1000;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( subID_2 === \"STS\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t    if( \"A\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        _geyserData.G2.STS.Tr_Th        = payload.A.Tr_Th;\n\t\t\t\t\t\t        _geyserData.G2.STS.Tr_Te        = payload.A.Tr_Te;\n\t\t\t\t\t\t        _geyserData.G2.STS.Tr_DR        = payload.A.Tr_DR;\n\t\t\t\t\t\t        _geyserData.G2.STS.Tr_CS        = payload.A.Tr_CS;\n\t\t\t\t\t\t        _geyserData.G2.STS.Tr_PCB       = payload.A.Tr_PCB;\n\t\t\t\t\t\t        _geyserData.G2.STS.A_Sc         = payload.A.A_Sc;\n\t\t\t\t\t\t        _geyserData.G2.STS.A_An         = payload.A.A_An;\n\t\t\t\t\t\t        _geyserData.G2.STS.A_DT         = payload.A.A_DT;\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    if( \"O\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        if(\"AC\" in payload.O)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.STS.O_AC     = payload.O.AC;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"PV\" in payload.O)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.STS.O_PV     = payload.O.PV;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    if(\"T\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        _geyserData.G2.STS.T            = payload.T;\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    if(\"H\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        _geyserData.G2.STS.H            = payload.H;\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (subID_2 === \"SET\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t    if(\"O\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        if(\"ACM\" in payload.O)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.SET.O.ACM    = payload.O.ACM;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"ACO\" in payload.O)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.SET.O.ACO    = payload.O.ACO;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"PVM\" in payload.O)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.SET.O.PVM    = payload.O.PVM;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    if(\"S\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        if(\"ACT\" in payload.S)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.SET.S.ACT        = payload.S.ACT;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"ACOT\" in payload.S)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.SET.S.ACOT        = payload.S.ACOT;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"PVT\" in payload.S)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.SET.S.PVT        = payload.S.PVT;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"ACCT\" in payload.S)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.SET.S.ACCT       = payload.S.ACCT;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    if(\"A\" in payload)\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t        if(\"DRT\" in payload.A)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.SET.A.DRT        = payload.A.DRT;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t        if(\"SCB\" in payload.A)\n\t\t\t\t\t\t        {\n\t\t\t\t\t\t            _geyserData.G2.SET.A.SCB        = payload.A.SCB;\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}   // end if unit 2\n\n                    // Reset Variables to 0 if Comms is lost\n    \t\t\t    if(_geyserData.CS.S === 0)\n    \t\t\t    {\n    \t\t\t\t\t_geyserData.G1.T.G\t\t= 0;\n    \t\t\t\t\t_geyserData.G1.T.PCB\t= 0;\n    \t\t\t\t\t_geyserData.G1.I.AC\t    = 0;\n    \t\t\t\t\t_geyserData.G1.I.PV\t    = 0;\n    \t\t\t\t\t_geyserData.G2.T.G\t\t= 0;\n    \t\t\t\t\t_geyserData.G2.T.PCB\t= 0;\n    \t\t\t\t\t_geyserData.G2.I.AC\t    = 0;\n    \t\t\t\t\t_geyserData.G2.I.PV\t    = 0;\n    \t\t\t    }\n    \n    \t\t\t\tglobal.set(\"_geyserTestData_gw2E2C3AE83E76C0\", _geyserData);\n    \t\t\t\tflow.set(\"unit\", unitID)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\nmsg.payload = _geyserData; // _geyserData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 80,
        "wires": [
            [
                "6952e3f6.75037c"
            ]
        ]
    },
    {
        "id": "bda96dd9.aac59",
        "type": "inject",
        "z": "6e2de0a8.936f6",
        "name": "Connection",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "61e7593c.711258"
            ]
        ]
    },
    {
        "id": "33d32594.a6d1ba",
        "type": "comment",
        "z": "6e2de0a8.936f6",
        "name": "Request Data from Unit",
        "info": "",
        "x": 120,
        "y": 220,
        "wires": []
    },
    {
        "id": "56e95b8b.bb1e44",
        "type": "inject",
        "z": "6e2de0a8.936f6",
        "name": "Update",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "GWA/gw8684F3EB1034EA/U",
        "payload": "",
        "payloadType": "str",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "363a59ee.789fa6",
                "ca340238.4a9f2"
            ]
        ]
    },
    {
        "id": "363a59ee.789fa6",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "Get Analogues",
        "func": "msg.topic = \"GWA/\"+flow.get(\"unit\")+\"/1/A\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 340,
        "wires": [
            [
                "874baa5e.769658"
            ]
        ]
    },
    {
        "id": "ca340238.4a9f2",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "Get Update",
        "func": "msg.topic = \"GWA/\"+flow.get(\"unit\")+\"/U\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 300,
        "wires": [
            [
                "874baa5e.769658"
            ]
        ]
    },
    {
        "id": "61e7593c.711258",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "Get Connection Status",
        "func": "msg.topic = \"GWA/\"+flow.get(\"unit\")+\"/S/CW\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 260,
        "wires": [
            [
                "874baa5e.769658"
            ]
        ]
    },
    {
        "id": "874baa5e.769658",
        "type": "mqtt out",
        "z": "6e2de0a8.936f6",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "ea070992.9873a8",
        "x": 530,
        "y": 260,
        "wires": []
    },
    {
        "id": "774a510d.5fe66",
        "type": "inject",
        "z": "6e2de0a8.936f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 720,
        "y": 260,
        "wires": [
            [
                "5b9e4899.b61108",
                "aabff94f.47e538"
            ]
        ]
    },
    {
        "id": "5b9e4899.b61108",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "G1 - Analog",
        "func": "msg.payload = global.get(\"_geyserTestData_gw2E2C3AE83E76C0\");\nvar dateValue = msg.payload.CS.t.Y + msg.payload.CS.t.M + msg.payload.CS.t.D;\nvar timeValue = msg.payload.CS.t.h +\":\"+ msg.payload.CS.t.m +\":\"+ msg.payload.CS.t.s;\nvar connectionServer = msg.payload.CS.S;\nvar connectionWifi = msg.payload.CS.I;\n\nvar G1temperaturePCB = msg.payload.G1.T.PCB;\nvar G1temperatureGeyser = msg.payload.G1.T.G;\n\nvar G1currentAC = msg.payload.G1.I.AC;\nvar G1currentPV = msg.payload.G1.I.PV;\nvar date\t\t\t= new Date();\nvar system_Year\t\t= String( date.getFullYear() );\nvar system_Month\t= String( date.getMonth() + 1 );\nvar system_Day\t\t= String( date.getDate() );\nvar system_Hour\t\t= String( date.getHours() );\nvar system_Minute\t= String( date.getMinutes() );\nvar system_Second\t= String( date.getSeconds() );\n\nsystem_Year\t\t\t= \"00\".substr(system_Year.length)\t\t+ system_Year;\nsystem_Month\t\t= \"00\".substr(system_Month.length)\t\t+ system_Month;\nsystem_Day\t\t\t= \"00\".substr(system_Day.length)\t\t+ system_Day;\nsystem_Hour\t\t\t= \"00\".substr(system_Hour.length)\t\t+ system_Hour;\nsystem_Minute\t\t= \"00\".substr(system_Minute.length)\t\t+ system_Minute;\nsystem_Second\t\t= \"00\".substr(system_Second.length)\t\t+ system_Second;\n\nvar system_date\t\t= system_Year + \"/\" + system_Month + \"/\" + system_Day;\nvar system_time\t\t= system_Hour + \":\" + system_Minute + \":\" + system_Second;\n\nvar ts = msg.timestamp || Date.now();\nvar d = new Date(ts);\ndt = d.toISOString();\ne = d.getTime();\n\nvar a = d.toJSON().split(/\\D+/);\nvar hrs = a[3];\nvar min = a[4];\nvar sec = a[5];\nvar year = a[0];\nvar month = a[1];\nvar day = a[2];\n\nvar logDate = (year+\"-\"+month+\"-\"+day);\nvar logTime = (hrs+\":\"+min+\":\"+sec);\n\nvar insertSelect = \"INSERT INTO [dbo].[geyserWorxData]([GW_Unit],[entrydate],[entrytime],[CS_S],[CS_I],[CS_Date],[CS_Time],[T_PCB],[T_G],[I_AC],[I_PV],[V_AC],[V_PV],[T_PCB_AVG],[T_G_AVG],[I_AC_AVG],[I_PV_AVG],[V_AC_AVG],[V_PV_AVG])\";\nvar values = \"VALUES('G1_gw2E2C3AE83E76C0','\"+system_date+\"','\"+system_time+\"',\"+connectionServer+\",\"+connectionWifi+\",'\"+dateValue+\"','\"+timeValue+\"',\";\nvar G1values = G1temperaturePCB+\",\"+G1temperatureGeyser+\",\"+G1currentAC+\",\"+G1currentPV+\",0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)\";\n\nvar outputs = [];\nvar sql;\nsql = insertSelect + \" \" + values + G1values;\nmsg.payload=sql;\n\nnode.status({fill:\"green\",shape:\"ring\",text:\"Time: \"+system_time});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 260,
        "wires": [
            [
                "2df30f96.c610f"
            ]
        ]
    },
    {
        "id": "aabff94f.47e538",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "G1 - Power",
        "func": "var date\t\t\t= new Date();\nvar system_Year\t\t= String( date.getFullYear() );\nvar system_Month\t= String( date.getMonth() + 1 );\nvar system_Day\t\t= String( date.getDate() );\nvar system_Hour\t\t= String( date.getHours() );\nvar system_Minute\t= String( date.getMinutes() );\nvar system_Second\t= String( date.getSeconds() );\n\nsystem_Year\t\t\t= \"00\".substr(system_Year.length)\t\t+ system_Year;\nsystem_Month\t\t= \"00\".substr(system_Month.length)\t\t+ system_Month;\nsystem_Day\t\t\t= \"00\".substr(system_Day.length)\t\t+ system_Day;\nsystem_Hour\t\t\t= \"00\".substr(system_Hour.length)\t\t+ system_Hour;\nsystem_Minute\t\t= \"00\".substr(system_Minute.length)\t\t+ system_Minute;\nsystem_Second\t\t= \"00\".substr(system_Second.length)\t\t+ system_Second;\n\nvar system_date\t\t= system_Year + \"/\" + system_Month + \"/\" + system_Day;\nvar system_time\t\t= system_Hour + \":\" + system_Minute + \":\" + system_Second;\n\nvar payload = global.get(\"_geyserTestData_gw2E2C3AE83E76C0\");\n\nvar Raw_AC = payload.G1.Pt.Raw.I2AC;\nvar Raw_PV = payload.G1.Pt.Raw.I2PV;\nvar kWh_AC = payload.G1.Pt.kWh.AC;\nvar kWh_PV = payload.G1.Pt.kWh.PV;\n\nvar ts = msg.timestamp || Date.now();\nvar d = new Date(ts);\ndt = d.toISOString();\ne = d.getTime();\n\nvar a = d.toJSON().split(/\\D+/);\nvar h = a[3];\nvar m = a[4];\nvar s = a[5];\nvar y = a[0];\nvar month = a[1];\nvar day = a[2];\n\nvar logDate = (y+\"-\"+month+\"-\"+day);\nvar logTime = (h+\":\"+m+\":\"+s);\n\nvar insertSelect = \"INSERT INTO [dbo].[geyserWorxPowerData]([GW_Unit],[entryDate],[entryTime],[Pt_Raw_AC],[Pt_Raw_PV],[Pt_kWh_AC],[Pt_kWh_PV])\";\nvar values = \"VALUES ('G1_gw2E2C3AE83E76C0','\"+system_date+\"','\"+system_time+\"',\"+Raw_AC+\",\"+Raw_PV+\",\"+kWh_AC+\",\"+kWh_PV+\")\";\n\nmsg.payload = insertSelect + \" \" + values;\nnode.status({fill:\"green\",shape:\"ring\",text:\"Time: \"+system_time});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 300,
        "wires": [
            [
                "2df30f96.c610f"
            ]
        ]
    },
    {
        "id": "2df30f96.c610f",
        "type": "MSSQL-UCGv2",
        "z": "6e2de0a8.936f6",
        "mssqlCN": "76347d9a.2c0094",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 1080,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "8be3dbec.3b3dc8",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.payload;\nvar output\t= [];\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"S\":{\n    \t\t\t\t    \"ACT\": payload\n    \t\t\t\t}\n        }\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "bbed780b.7eda28",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.payload;\nvar output\t= [];\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"S\":{\n    \t\t\t\t    \"ACOT\": payload\n    \t\t\t\t}\n        }\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "fcbd5599.6b1f48",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.payload;\nvar output\t= [];\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"S\":{\n    \t\t\t\t    \"PVT\": payload\n    \t\t\t\t}\n        }\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "716e686d.0b5e68",
        "type": "comment",
        "z": "6e2de0a8.936f6",
        "name": "Dashboard 1",
        "info": "",
        "x": 80,
        "y": 460,
        "wires": []
    },
    {
        "id": "8851fe0b.7cb81",
        "type": "inject",
        "z": "6e2de0a8.936f6",
        "name": "",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 500,
        "wires": [
            [
                "bc34ea3.608a218"
            ]
        ]
    },
    {
        "id": "96a180df.a6328",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.data;\nvar temperature;    // 0-100\nvar setpoint;       // 0-100\nvar gwState;        // \"heating\", \"cooling\"\nvar leaf;\nvar away = flow.get(\"enabled1\") || 0;\nvar _output = {};\n\n\nif(payload.G1.STS.O_PV===1){gwState = \"cooling\";}\nif(payload.G1.STS.O_AC===1){gwState = \"heating\";}\nif(payload.G1.STS.O_PV===0 && payload.G1.STS.O_AC===0){gwState = \"Off\";}\n\n//if(payload.G1.SET.O.PVM===1 && payload.G1.SET.O.ACM===1){gwState = \"heating\";}\n//if(payload.G1.SET.O.PVM===0 && payload.G1.SET.O.ACM===1){gwState = \"heating\";}\n//if(payload.G1.SET.O.PVM===0 && payload.G1.SET.O.ACM===0){gwState = \"Off\";}\n\ntemperature = parseInt(payload.G1.T.G);\nglobal.set(\"GW_Temperature\", temperature);\nif (gwState == \"heating\")\n{\n    setpoint = parseInt(payload.G1.SET.S.ACT);\n}\nelse if(gwState == \"cooling\")\n{\n    setpoint = parseInt(payload.G1.SET.S.PVT);\n}\n\nleaf = 0;\n//away = 0;   // holiday mode\n\nvar output\t= [];\n\nvar _output = {\n        \"payload\": {\n\t\t\t\t    \"temperature\":setpoint,\n\t\t\t\t    \"setpoint\":temperature,\n\t\t\t\t    \"state\":gwState,\n\t\t\t\t    \"leaf\":leaf,\n\t\t\t\t    \"away\":away\n        }\n};\noutput = [\n\t\t\t_output\n\t\t];\n\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 660,
        "wires": [
            [
                "4a1d86b9.27b458"
            ]
        ]
    },
    {
        "id": "65d64cf6.e6a4a4",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "msg.payload=1\nmsg.text = \"GeyserWorx\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 500,
        "wires": [
            [
                "c5110632.f2e218"
            ]
        ]
    },
    {
        "id": "3f230999.6a5516",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = flow.get(\"G1ACkW\")||0;\nmsg.text = \"AC: <b>\"+payload+\"</b> kWh\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 700,
        "wires": [
            [
                "7f82f9e1.9cfab8"
            ]
        ]
    },
    {
        "id": "bc34ea3.608a218",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "msg.payload = \"gw2E2C3AE83E76C0\";\nmsg.unit = 1;\nmsg.desc = \"Test 1\"\nmsg.data = global.get(\"_geyserTestData_\"+msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 540,
        "wires": [
            [
                "65d64cf6.e6a4a4",
                "96a180df.a6328",
                "3f230999.6a5516",
                "7641f2b5.b5b8ac",
                "824f013.56817",
                "7a89280a.5da208",
                "77bb160a.b63398",
                "ad1a9940.a428e8",
                "2074ebf6.899e94",
                "695cc3c8.fc92bc",
                "5ccfc62c.72c568",
                "c60215e7.5c1398",
                "dc153a8d.d532e8",
                "3f3b3e4b.18fcf2",
                "4e817d5c.0f8e84",
                "95c7e7bd.ee80a8",
                "ca2e3c4.5abf6c",
                "9fc2f20d.afb29"
            ]
        ]
    },
    {
        "id": "c8bd71be.6aa8f",
        "type": "rbe",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 730,
        "y": 620,
        "wires": [
            [
                "fcbd5599.6b1f48"
            ]
        ]
    },
    {
        "id": "7641f2b5.b5b8ac",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = flow.get(\"G1PVkW\")||0;\nmsg.text = \"PV: <b>\"+payload+\"</b> kWh\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 720,
        "wires": [
            [
                "73f55b93.59fcc4"
            ]
        ]
    },
    {
        "id": "824f013.56817",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = flow.get(\"G1ACCost\")||0;\nmsg.text = \"AC cost: <b>R \"+payload+\"</b>\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 740,
        "wires": [
            [
                "e52f5dd2.ccc3a"
            ]
        ]
    },
    {
        "id": "7a89280a.5da208",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = flow.get(\"G1PVCost\")||0;\nmsg.text = \"PV saving: <b>R \"+payload+\"</b>\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 760,
        "wires": [
            [
                "b5e233b.fd7e2d"
            ]
        ]
    },
    {
        "id": "77bb160a.b63398",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = flow.get(\"G1PVUsage\")||0;\nmsg.text = \"PV usage: <b>\"+payload+\" </b>%\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 780,
        "wires": [
            [
                "3a3e523a.4bb81e"
            ]
        ]
    },
    {
        "id": "ad1a9940.a428e8",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = flow.get(\"G1Carbon\")||0;\nmsg.text = \"CO2: <b>\"+payload+\"</b> tCO2e\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 800,
        "wires": [
            [
                "ca24fd24.0e039"
            ]
        ]
    },
    {
        "id": "2074ebf6.899e94",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.data;\nvar alarms;\n\nif(payload.G1.STS.Tr_Th==1 || payload.G1.STS.Tr_Te==1 || payload.G1.STS.Tr_DR==1 || payload.G1.STS.Tr_CS==1 || payload.G1.STS.Tr_PCB==1 || payload.G1.STS.A_Sc==1 || payload.G1.STS.A_An==1 || payload.G1.STS.A_DT==1)\n{\n    if(payload.G1.STS.Tr_Th==1){alarms=\"Over Temperature\"}\n    if(payload.G1.STS.Tr_Te==1){alarms=\"Low Temperature\"}\n    if(payload.G1.STS.Tr_DR==1){alarms=\"Dry Burn Alarm\"}\n    if(payload.G1.STS.Tr_CS==1){alarms=\"Contactor Fault\"}\n    if(payload.G1.STS.Tr_PCB==1){alarms=\"PCB Temperature Hi\"}\n    if(payload.G1.STS.A_Sc==1){alarms=\"Scale Build-up\"}\n    if(payload.G1.STS.A_An==1){alarms=\"Anode Depletion Alarm\"}\n    if(payload.G1.STS.A_DT==1){alarms=\"Driptray Water Alarm\"}\n}\nelse\n{\n    alarms = \"None\";\n}\n\nmsg.text = \"Alarms: <b>\"+alarms+\"</b>\";\nif(alarms != \"None\")\n{\n    msg.payload = \"1\";\n}\nelse\n{\n    msg.payload = \"0\";\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 820,
        "wires": [
            [
                "be70ae9d.1682c"
            ]
        ]
    },
    {
        "id": "695cc3c8.fc92bc",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.data;\nif(payload.G1.STS.O_AC===0)\n{\n    msg.topic = \"AC:Off\"\n    msg.text = msg.topic;\n}\nelse\n{\n    msg.topic = \"AC:On\"\n    msg.text = msg.topic;\n}\nmsg.payload     = payload.G1.STS.O_AC;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 520,
        "wires": [
            [
                "8f3cdbbe.456618"
            ]
        ]
    },
    {
        "id": "5ccfc62c.72c568",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.data;\nif(payload.G1.STS.O_PV===0)\n{\n    msg.topic = \"PV:Off\"\n    msg.text = msg.topic;\n}\nelse\n{\n    msg.topic = \"PV:On\"\n    msg.text = msg.topic;\n}\nmsg.payload     = payload.G1.STS.O_PV;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 540,
        "wires": [
            [
                "4578b6ee.9ac6d8"
            ]
        ]
    },
    {
        "id": "c60215e7.5c1398",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.data;\nif(payload.G1.SET.O.ACO===0)\n{\n    msg.topic = \"Boost\"\n    msg.text = msg.topic;\n}\nelse\n{\n    msg.topic = \"Boost\"\n    msg.text = msg.topic;\n}\nmsg.payload     = payload.G1.SET.O.ACO;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 560,
        "wires": [
            [
                "a271c8d0.c90f98"
            ]
        ]
    },
    {
        "id": "dc153a8d.d532e8",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.data;\nmsg.topic       = \"AC: \"+payload.G1.SET.S.ACT;\nmsg.payload     = payload.G1.SET.S.ACT;\nmsg.background  = payload.G1.SET.O.ACM == 1 ? \"DeepSkyBlue\" : \"grey\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 580,
        "wires": [
            [
                "367905e1.8df65a"
            ]
        ]
    },
    {
        "id": "3f3b3e4b.18fcf2",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.data;\nmsg.topic       = \"Boost: \"+payload.G1.SET.S.ACOT;\nmsg.payload     = payload.G1.SET.S.ACOT;\nmsg.background  = payload.G1.SET.O.ACO == 1 ? \"DeepSkyBlue\" : \"grey\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 600,
        "wires": [
            [
                "d0e644a9.855178"
            ]
        ]
    },
    {
        "id": "4e817d5c.0f8e84",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.data;\nmsg.topic       = \"PV: \"+payload.G1.SET.S.PVT;\nmsg.payload     = payload.G1.SET.S.PVT;\nmsg.background  = payload.G1.SET.O.PVM == 1 ? \"DeepSkyBlue\" : \"grey\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 620,
        "wires": [
            [
                "d96d1a80.0ae378"
            ]
        ]
    },
    {
        "id": "95c7e7bd.ee80a8",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "//var payload = msg.data;\n//var I = parseFloat(payload.G1.I.AC);\nvar I = parseFloat(flow.get(\"AC_I\"));\n\nmsg.text = \"AC: <b>\"+I.toFixed(2)+\"</b> A\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 860,
        "wires": [
            [
                "ee973f35.9815d"
            ]
        ]
    },
    {
        "id": "ca2e3c4.5abf6c",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.data;\nvar I = parseFloat(payload.G1.I.PV);\nmsg.text = \"PV: <b>\"+I.toFixed(2)+\"</b> A\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 880,
        "wires": [
            [
                "ed62c97b.1d7e68"
            ]
        ]
    },
    {
        "id": "9fc2f20d.afb29",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.data;\nvar I = parseInt(payload.G1.T.PCB);\nmsg.text = \"PCB: <b>\"+I+\"</b>\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 900,
        "wires": [
            [
                "bcb46b7e.c68578"
            ]
        ]
    },
    {
        "id": "a19a4c14.f0eb7",
        "type": "mqtt out",
        "z": "6e2de0a8.936f6",
        "name": "Reset Alarms",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "ea070992.9873a8",
        "x": 570,
        "y": 940,
        "wires": []
    },
    {
        "id": "b0da8ce1.9f192",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var unit = flow.get(\"unit\");\nvar payload = msg.payload;\nvar output\t= [];\n// GWR/gwCECC50E32854A4/1/STS\nvar topic = \"GWR/\"+unit+\"/1/STS\";\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"A\":{\n    \t\t\t\t    \"Tr_DR\": \"\",\n    \t\t\t\t    \"A_Sc\": \"\",\n    \t\t\t\t    \"A_An\": \"\",\n    \t\t\t\t    \"A_DT\": \"\"\n    \t\t\t\t}\n        },\n    \t\"topic\": topic\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\nnode.status({text:msg.payload});\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 940,
        "wires": [
            [
                "a19a4c14.f0eb7"
            ]
        ]
    },
    {
        "id": "367905e1.8df65a",
        "type": "ui_text_input",
        "z": "6e2de0a8.936f6",
        "name": "",
        "label": "AC Setpoint",
        "tooltip": "",
        "group": "fbbc4141.094d",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 570,
        "y": 580,
        "wires": [
            [
                "8166bb4.62a0e48"
            ]
        ]
    },
    {
        "id": "d0e644a9.855178",
        "type": "ui_text_input",
        "z": "6e2de0a8.936f6",
        "name": "",
        "label": "Boost Setpoint",
        "tooltip": "",
        "group": "fbbc4141.094d",
        "order": 7,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 580,
        "y": 600,
        "wires": [
            [
                "1fb2a2ed.4b8a1d"
            ]
        ]
    },
    {
        "id": "d96d1a80.0ae378",
        "type": "ui_text_input",
        "z": "6e2de0a8.936f6",
        "name": "",
        "label": "PV Setpoint",
        "tooltip": "",
        "group": "fbbc4141.094d",
        "order": 6,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 570,
        "y": 620,
        "wires": [
            [
                "c8bd71be.6aa8f"
            ]
        ]
    },
    {
        "id": "50061e96.8b0e5",
        "type": "ui_button",
        "z": "6e2de0a8.936f6",
        "name": "",
        "group": "fbbc4141.094d",
        "order": 20,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "Grey",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 270,
        "y": 940,
        "wires": [
            [
                "b0da8ce1.9f192"
            ]
        ]
    },
    {
        "id": "b86d3510.8d1778",
        "type": "ui_text",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "order": 8,
        "width": "1",
        "height": "1",
        "name": "Blank",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "x": 700,
        "y": 700,
        "wires": []
    },
    {
        "id": "4a1d86b9.27b458",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "Dial",
        "order": 9,
        "width": "4",
        "height": "4",
        "format": "<div id=\"thermostat\"></div>\n\n<style>\n@import url(http://fonts.googleapis.com/css?family=Open+Sans:300);\n#thermostat {\n  margin: 0 auto;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.dial {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n.dial.away .dial__ico__leaf {\n  visibility: hidden;\n}\n.dial.away .dial__lbl--target {\n  visibility: hidden;\n}\n.dial.away .dial__lbl--target--half {\n  visibility: hidden;\n}\n.dial.away .dial__lbl--away {\n  opacity: 1;\n}\n.dial .dial__shape {\n  -webkit-transition: fill 0.5s;\n  transition: fill 0.5s;\n}\n.dial__ico__leaf {\n  fill: #13EB13;\n  opacity: 0;\n  -webkit-transition: opacity 0.5s;\n  transition: opacity 0.5s;\n  pointer-events: none;\n}\n.dial.has-leaf .dial__ico__leaf {\n  display: block;\n  opacity: 1;\n  pointer-events: initial;\n}\n.dial__editableIndicator {\n  fill: white;\n  fill-rule: evenodd;\n  opacity: 0;\n  -webkit-transition: opacity 0.5s;\n  transition: opacity 0.5s;\n}\n.dial--edit .dial__editableIndicator {\n  opacity: 1;\n}\n.dial--state--off .dial__shape {\n  fill: #3d3c3c;\n}\n.dial--state--heating .dial__shape {\n  fill: #E36304;\n}\n.dial--state--cooling .dial__shape {\n  fill: #3c9517;\n}\n.dial__ticks path {\n  fill: rgba(255, 255, 255, 0.3);\n}\n.dial__ticks path.active {\n  fill: rgba(255, 255, 255, 0.8);\n}\n.dial text {\n  fill: white;\n  text-anchor: middle;\n  font-family: Helvetica, sans-serif;\n  alignment-baseline: central;\n}\n.dial__lbl--target {\n  font-size: 120px;\n  font-weight: bold;\n}\n.dial__lbl--target--half {\n  font-size: 40px;\n  font-weight: bold;\n  opacity: 0;\n  -webkit-transition: opacity 0.1s;\n  transition: opacity 0.1s;\n}\n.dial__lbl--target--half.shown {\n  opacity: 1;\n  -webkit-transition: opacity 0s;\n  transition: opacity 0s;\n}\n.dial__lbl--ambient {\n  font-size: 22px;\n  font-weight: bold;\n}\n.dial__lbl--away {\n  font-size: 72px;\n  font-weight: bold;\n  opacity: 0;\n  pointer-events: none;\n}\n#controls {\n  font-family: Open Sans;\n  background-color: rgba(255, 255, 255, 0.25);\n  padding: 20px;\n  border-radius: 5px;\n  position: absolute;\n  left: 50%;\n  -webkit-transform: translatex(-50%);\n          transform: translatex(-50%);\n  margin-top: 20px;\n}\n#controls label {\n  text-align: left;\n  display: block;\n}\n#controls label span {\n  display: inline-block;\n  width: 200px;\n  text-align: right;\n  font-size: 0.8em;\n  text-transform: uppercase;\n}\n#controls p {\n  margin: 0;\n  margin-bottom: 1em;\n  padding-bottom: 1em;\n  border-bottom: 2px solid #ccc;\n}\n</style>\n<script>\n    var thermostatDial = (function() {\n\t\n\t/*\n\t * Utility functions\n\t */\n\t\n\t// Create an element with proper SVG namespace, optionally setting its attributes and appending it to another element\n\tfunction createSVGElement(tag,attributes,appendTo) {\n\t\tvar element = document.createElementNS('http://www.w3.org/2000/svg',tag);\n\t\tattr(element,attributes);\n\t\tif (appendTo) {\n\t\t\tappendTo.appendChild(element);\n\t\t}\n\t\treturn element;\n\t}\n\t\n\t// Set attributes for an element\n\tfunction attr(element,attrs) {\n\t\tfor (var i in attrs) {\n\t\t\telement.setAttribute(i,attrs[i]);\n\t\t}\n\t}\n\t\n\t// Rotate a cartesian point about given origin by X degrees\n\tfunction rotatePoint(point, angle, origin) {\n\t\tvar radians = angle * Math.PI/180;\n\t\tvar x = point[0]-origin[0];\n\t\tvar y = point[1]-origin[1];\n\t\tvar x1 = x*Math.cos(radians) - y*Math.sin(radians) + origin[0];\n\t\tvar y1 = x*Math.sin(radians) + y*Math.cos(radians) + origin[1];\n\t\treturn [x1,y1];\n\t}\n\t\n\t// Rotate an array of cartesian points about a given origin by X degrees\n\tfunction rotatePoints(points, angle, origin) {\n\t\treturn points.map(function(point) {\n\t\t\treturn rotatePoint(point, angle, origin);\n\t\t});\n\t}\n\t\n\t// Given an array of points, return an SVG path string representing the shape they define\n\tfunction pointsToPath(points) {\n\t\treturn points.map(function(point, iPoint) {\n\t\t\treturn (iPoint>0?'L':'M') + point[0] + ' ' + point[1];\n\t\t}).join(' ')+'Z';\n\t}\n\t\n\tfunction circleToPath(cx, cy, r) {\n\t\treturn [\n\t\t\t\"M\",cx,\",\",cy,\n\t\t\t\"m\",0-r,\",\",0,\n\t\t\t\"a\",r,\",\",r,0,1,\",\",0,r*2,\",\",0,\n\t\t\t\"a\",r,\",\",r,0,1,\",\",0,0-r*2,\",\",0,\n\t\t\t\"z\"\n\t\t].join(' ').replace(/\\s,\\s/g,\",\");\n\t}\n\t\n\tfunction donutPath(cx,cy,rOuter,rInner) {\n\t\treturn circleToPath(cx,cy,rOuter) + \" \" + circleToPath(cx,cy,rInner);\n\t}\n\t\n\t// Restrict a number to a min + max range\n\tfunction restrictToRange(val,min,max) {\n\t\tif (val < min) return min;\n\t\tif (val > max) return max;\n\t\treturn val;\n\t}\n\t\n\t// Round a number to the nearest 0.5\n\tfunction roundHalf(num) {\n\t\treturn Math.round(num*2)/2;\n\t}\n\t\n\tfunction setClass(el, className, state) {\n\t\tel.classList[state ? 'add' : 'remove'](className);\n\t}\n\t\n\t/*\n\t * The \"MEAT\"\n\t */\n\n\treturn function(targetElement, options) {\n\t\tvar self = this;\n\t\t\n\t\t/*\n\t\t * Options\n\t\t */\n\t\toptions = options || {};\n\t\toptions = {\n\t\t\tdiameter: options.diameter || 400,\n\t\t\tminValue: options.minValue || 00, // Minimum value for target temperature\n\t\t\tmaxValue: options.maxValue || 85, // Maximum value for target temperature\n\t\t\tnumTicks: options.numTicks || 200, // Number of tick lines to display around the dial\n\t\t\tonSetTargetTemperature: options.onSetTargetTemperature || function() {}, // Function called when new target temperature set by the dial\n\t\t};\n\t\t\n\t\t/*\n\t\t * Properties - calculated from options in many cases\n\t\t */\n\t\tvar properties = {\n\t\t\ttickDegrees: 300, //  Degrees of the dial that should be covered in tick lines\n\t\t\trangeValue: options.maxValue - options.minValue,\n\t\t\tradius: options.diameter/2,\n\t\t\tticksOuterRadius: options.diameter / 30,\n\t\t\tticksInnerRadius: options.diameter / 8,\n\t\t\thvac_states: ['off', 'heating', 'cooling'],\n\t\t\tdragLockAxisDistance: 15,\n\t\t}\n\t\tproperties.lblAmbientPosition = [properties.radius, properties.ticksOuterRadius-(properties.ticksOuterRadius-properties.ticksInnerRadius)/2]\n\t\tproperties.offsetDegrees = 180-(360-properties.tickDegrees)/2;\n\t\t\n\t\t/*\n\t\t * Object state\n\t\t */\n\t\tvar state = {\n\t\t\ttarget_temperature: options.minValue,\n\t\t\tambient_temperature: options.minValue,\n\t\t\thvac_state: properties.hvac_states[0],\n\t\t\thas_leaf: false,\n\t\t\taway: false\n\t\t};\n\t\t\n\t\t/*\n\t\t * Property getter / setters\n\t\t */\n\t\tObject.defineProperty(this,'target_temperature',{\n\t\t\tget: function() {\n\t\t\t\treturn state.target_temperature;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.target_temperature = restrictTargetTemperature(+val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'ambient_temperature',{\n\t\t\tget: function() {\n\t\t\t\treturn state.ambient_temperature;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.ambient_temperature = roundHalf(+val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'hvac_state',{\n\t\t\tget: function() {\n\t\t\t\treturn state.hvac_state;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tif (properties.hvac_states.indexOf(val)>=0) {\n\t\t\t\t\tstate.hvac_state = val;\n\t\t\t\t\trender();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'has_leaf',{\n\t\t\tget: function() {\n\t\t\t\treturn state.has_leaf;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.has_leaf = !!val;\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'away',{\n\t\t\tget: function() {\n\t\t\t\treturn state.away;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.away = !!val;\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\t\n\t\t/*\n\t\t * SVG\n\t\t */\n\t\tvar svg = createSVGElement('svg',{\n\t\t\twidth: '100%', //options.diameter+'px',\n\t\t\theight: '100%', //options.diameter+'px',\n\t\t\tviewBox: '0 0 '+options.diameter+' '+options.diameter,\n\t\t\tclass: 'dial'\n\t\t},targetElement);\n\t\t// CIRCULAR DIAL\n\t\tvar circle = createSVGElement('circle',{\n\t\t\tcx: properties.radius,\n\t\t\tcy: properties.radius,\n\t\t\tr: properties.radius,\n\t\t\tclass: 'dial__shape'\n\t\t},svg);\n\t\t// EDITABLE INDICATOR\n\t\tvar editCircle = createSVGElement('path',{\n\t\t\td: donutPath(properties.radius,properties.radius,properties.radius-4,properties.radius-8),\n\t\t\tclass: 'dial__editableIndicator',\n\t\t},svg);\n\t\t\n\t\t/*\n\t\t * Ticks\n\t\t */\n\t\tvar ticks = createSVGElement('g',{\n\t\t\tclass: 'dial__ticks'\t\n\t\t},svg);\n\t\tvar tickPoints = [\n\t\t\t[properties.radius-1, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1, properties.ticksInnerRadius],\n\t\t\t[properties.radius-1, properties.ticksInnerRadius]\n\t\t];\n\t\tvar tickPointsLarge = [\n\t\t\t[properties.radius-1.5, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1.5, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1.5, properties.ticksInnerRadius+20],\n\t\t\t[properties.radius-1.5, properties.ticksInnerRadius+20]\n\t\t];\n\t\tvar theta = properties.tickDegrees/options.numTicks;\n\t\tvar tickArray = [];\n\t\tfor (var iTick=0; iTick<options.numTicks; iTick++) {\n\t\t\ttickArray.push(createSVGElement('path',{d:pointsToPath(tickPoints)},ticks));\n\t\t};\n\t\t\n\t\t/*\n\t\t * Labels\n\t\t */\n\t\tvar lblTarget = createSVGElement('text',{\n\t\t\tx: properties.radius,\n\t\t\ty: properties.radius,\n\t\t\tclass: 'dial__lbl dial__lbl--target'\n\t\t},svg);\n\t\tvar lblTarget_text = document.createTextNode('');\n\t\tlblTarget.appendChild(lblTarget_text);\n\t\t//\n\t\tvar lblTargetHalf = createSVGElement('text',{\n\t\t\tx: properties.radius + properties.radius/2.5,\n\t\t\ty: properties.radius - properties.radius/8,\n\t\t\tclass: 'dial__lbl dial__lbl--target--half'\n\t\t},svg);\n\t\tvar lblTargetHalf_text = document.createTextNode('5');\n\t\tlblTargetHalf.appendChild(lblTargetHalf_text);\n\t\t//\n\t\tvar lblAmbient = createSVGElement('text',{\n\t\t\tclass: 'dial__lbl dial__lbl--ambient'\n\t\t},svg);\n\t\tvar lblAmbient_text = document.createTextNode('');\n\t\tlblAmbient.appendChild(lblAmbient_text);\n\t\t//\n\t\tvar lblAway = createSVGElement('text',{\n\t\t\tx: properties.radius,\n\t\t\ty: properties.radius,\n\t\t\tclass: 'dial__lbl dial__lbl--away'\n\t\t},svg);\n\t\tvar lblAway_text = document.createTextNode('AWAY');\n\t\tlblAway.appendChild(lblAway_text);\n\t\t//\n\t\tvar icoLeaf = createSVGElement('path',{\n\t\t\tclass: 'dial__ico__leaf'\n\t\t},svg);\n\t\t\n\t\t/*\n\t\t * LEAF\n\t\t */\n\t\tvar leafScale = properties.radius/5/100;\n\t\tvar leafDef = [\"M\", 3, 84, \"c\", 24, 17, 51, 18, 73, -6, \"C\", 100, 52, 100, 22, 100, 4, \"c\", -13, 15, -37, 9, -70, 19, \"C\", 4, 32, 0, 63, 0, 76, \"c\", 6, -7, 18, -17, 33, -23, 24, -9, 34, -9, 48, -20, -9, 10, -20, 16, -43, 24, \"C\", 22, 63, 8, 78, 3, 84, \"z\"].map(function(x) {\n\t\t\treturn isNaN(x) ? x : x*leafScale;\n\t\t}).join(' ');\n\t\tvar translate = [properties.radius-(leafScale*100*0.5),properties.radius*1.5]\n\t\tvar icoLeaf = createSVGElement('path',{\n\t\t\tclass: 'dial__ico__leaf',\n\t\t\td: leafDef,\n\t\t\ttransform: 'translate('+translate[0]+','+translate[1]+')'\n\t\t},svg);\n\t\t\t\n\t\t/*\n\t\t * RENDER\n\t\t */\n\t\tfunction render() {\n\t\t\trenderAway();\n\t\t\trenderHvacState();\n\t\t\trenderTicks();\n\t\t\trenderTargetTemperature();\n\t\t\trenderAmbientTemperature();\n\t\t\trenderLeaf();\n\t\t}\n\t\trender();\n\n\t\t/*\n\t\t * RENDER - ticks\n\t\t */\n\t\tfunction renderTicks() {\n\t\t\tvar vMin, vMax;\n\t\t\tif (self.away) {\n\t\t\t\tvMin = self.ambient_temperature;\n\t\t\t\tvMax = vMin;\n\t\t\t} else {\n\t\t\t\tvMin = Math.min(self.ambient_temperature, self.target_temperature);\n\t\t\t\tvMax = Math.max(self.ambient_temperature, self.target_temperature);\n\t\t\t}\n\t\t\tvar min = restrictToRange(Math.round((vMin-options.minValue)/properties.rangeValue * options.numTicks),0,options.numTicks-1);\n\t\t\tvar max = restrictToRange(Math.round((vMax-options.minValue)/properties.rangeValue * options.numTicks),0,options.numTicks-1);\n\t\t\t//\n\t\t\ttickArray.forEach(function(tick,iTick) {\n\t\t\t\tvar isLarge = iTick==min || iTick==max;\n\t\t\t\tvar isActive = iTick >= min && iTick <= max;\n\t\t\t\tattr(tick,{\n\t\t\t\t\td: pointsToPath(rotatePoints(isLarge ? tickPointsLarge: tickPoints,iTick*theta-properties.offsetDegrees,[properties.radius, properties.radius])),\n\t\t\t\t\tclass: isActive ? 'active' : ''\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\n\t\t/*\n\t\t * RENDER - ambient temperature\n\t\t */\n\t\tfunction renderAmbientTemperature() {\n\t\t\tlblAmbient_text.nodeValue = Math.floor(self.ambient_temperature);\n\t\t\tif (self.ambient_temperature%1!=0) {\n\t\t\t\tlblAmbient_text.nodeValue += '⁵';\n\t\t\t}\n\t\t\tvar peggedValue = restrictToRange(self.ambient_temperature, options.minValue, options.maxValue);\n\t\t\tdegs = properties.tickDegrees * (peggedValue-options.minValue)/properties.rangeValue - properties.offsetDegrees;\n\t\t\tif (peggedValue > self.target_temperature) {\n\t\t\t\tdegs += 8;\n\t\t\t} else {\n\t\t\t\tdegs -= 8;\n\t\t\t}\n\t\t\tvar pos = rotatePoint(properties.lblAmbientPosition,degs,[properties.radius, properties.radius]);\n\t\t\tattr(lblAmbient,{\n\t\t\t\tx: pos[0],\n\t\t\t\ty: pos[1]\n\t\t\t});\n\t\t}\n\n\t\t/*\n\t\t * RENDER - target temperature\n\t\t */\n\t\tfunction renderTargetTemperature() {\n\t\t\tlblTarget_text.nodeValue = Math.floor(self.target_temperature);\n\t\t\tsetClass(lblTargetHalf,'shown',self.target_temperature%1!=0);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - leaf\n\t\t */\n\t\tfunction renderLeaf() {\n\t\t\tsetClass(svg,'has-leaf',self.has_leaf);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - HVAC state\n\t\t */\n\t\tfunction renderHvacState() {\n\t\t\tArray.prototype.slice.call(svg.classList).forEach(function(c) {\n\t\t\t\tif (c.match(/^dial--state--/)) {\n\t\t\t\t\tsvg.classList.remove(c);\n\t\t\t\t};\n\t\t\t});\n\t\t\tsvg.classList.add('dial--state--'+self.hvac_state);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - away\n\t\t */\n\t\tfunction renderAway() {\n\t\t\tsvg.classList[self.away ? 'add' : 'remove']('away');\n\t\t}\n\t\t\n\t\t/*\n\t\t * Drag to control\n\t\t */\n\t\tvar _drag = {\n\t\t\tinProgress: false,\n\t\t\tstartPoint: null,\n\t\t\tstartTemperature: 0,\n\t\t\tlockAxis: undefined\n\t\t};\n\t\t\n\t\tfunction eventPosition(ev) {\n\t\t\tif (ev.targetTouches && ev.targetTouches.length) {\n\t\t\t\treturn  [ev.targetTouches[0].clientX, ev.targetTouches[0].clientY];\n\t\t\t} else {\n\t\t\t\treturn [ev.x, ev.y];\n\t\t\t};\n\t\t}\n\t\t\n\t\tvar startDelay;\n\t\tfunction dragStart(ev) {\n\t\t\tstartDelay = setTimeout(function() {\n\t\t\t\tsetClass(svg, 'dial--edit', true);\n\t\t\t\t_drag.inProgress = true;\n\t\t\t\t_drag.startPoint = eventPosition(ev);\n\t\t\t\t_drag.startTemperature = self.ambient_temperature || options.minValue;\n\t\t\t\t_drag.lockAxis = undefined;\n\t\t\t},1000);\n\t\t};\n\t\t\n\t\tfunction dragEnd (ev) {\n\t\t\tclearTimeout(startDelay);\n\t\t\tsetClass(svg, 'dial--edit', false);\n\t\t\tif (!_drag.inProgress) return;\n\t\t\t_drag.inProgress = false;\n\t\t\tif (self.ambient_temperature != _drag.startTemperature) {\n\t\t\t\tif (typeof options.onSetTargetTemperature == 'function') {\n\t\t\t\t\toptions.onSetTargetTemperature(self.ambient_temperature);\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\t\n\t\tfunction dragMove(ev) {\n\t\t\tev.preventDefault();\n\t\t\tif (!_drag.inProgress) return;\n\t\t\tvar evPos =  eventPosition(ev);\n\t\t\tvar dy = _drag.startPoint[1]-evPos[1];\n\t\t\tvar dx = evPos[0] - _drag.startPoint[0];\n\t\t\tvar dxy;\n\t\t\tif (_drag.lockAxis == 'x') {\n\t\t\t\tdxy  = dx;\n\t\t\t} else if (_drag.lockAxis == 'y') {\n\t\t\t\tdxy = dy;\n\t\t\t} else if (Math.abs(dy) > properties.dragLockAxisDistance) {\n\t\t\t\t_drag.lockAxis = 'y';\n\t\t\t\tdxy = dy;\n\t\t\t} else if (Math.abs(dx) > properties.dragLockAxisDistance) {\n\t\t\t\t_drag.lockAxis = 'x';\n\t\t\t\tdxy = dx;\n\t\t\t} else {\n\t\t\t\tdxy = (Math.abs(dy) > Math.abs(dx)) ? dy : dx;\n\t\t\t};\n\t\t\tvar dValue = (dxy*getSizeRatio())/(options.diameter)*properties.rangeValue;\n\t\t\tself.ambient_temperature = roundHalf(_drag.startTemperature+dValue);\n\t\t}\n\t\t\n\t\tsvg.addEventListener('mousedown',dragStart);\n\t\tsvg.addEventListener('touchstart',dragStart);\n\t\t\n\t\tsvg.addEventListener('mouseup',dragEnd);\n\t\tsvg.addEventListener('mouseleave',dragEnd);\n\t\tsvg.addEventListener('touchend',dragEnd);\n\t\t\n\t\tsvg.addEventListener('mousemove',dragMove);\n\t\tsvg.addEventListener('touchmove',dragMove);\n\t\t//\n\t\t\n\t\t/*\n\t\t * Helper functions\n\t\t */\n\t\tfunction restrictTargetTemperature(t) {\n\t\t\treturn restrictToRange(roundHalf(t),options.minValue,options.maxValue);\n\t\t}\n\t\t\n\t\tfunction angle(point) {\n\t\t\tvar dx = point[0] - properties.radius;\n\t\t\tvar dy = point[1] - properties.radius;\n\t\t\tvar theta = Math.atan(dx/dy) / (Math.PI/180);\n\t\t\tif (point[0]>=properties.radius && point[1] < properties.radius) {\n\t\t\t\ttheta = 90-theta - 90;\n\t\t\t} else if (point[0]>=properties.radius && point[1] >= properties.radius) {\n\t\t\t\ttheta = 90-theta + 90;\n\t\t\t} else if (point[0]<properties.radius && point[1] >= properties.radius) {\n\t\t\t\ttheta = 90-theta + 90;\n\t\t\t} else if (point[0]<properties.radius && point[1] < properties.radius) {\n\t\t\t\ttheta = 90-theta+270;\n\t\t\t}\n\t\t\treturn theta;\n\t\t};\n\t\t\n\t\tfunction getSizeRatio() {\n\t\t\treturn options.diameter / targetElement.clientWidth;\n\t\t}\n\t\t\n\t};\n})();\n\n/* ==== */\n(function(scope) {\n    \n    var nest = new thermostatDial(document.getElementById('thermostat'),{\n    \tonSetTargetTemperature: function(v) {\n    \t\tscope.send({topic: \"target_temperature\", payload: v});\n    \t}\n    });\n\n\n    scope.$watch('msg', function(data) {\n        //console.log(data.topic+\"  \"+data.payload);\n            nest.ambient_temperature = data.payload.temperature;\n            nest.target_temperature = data.payload.setpoint;\n            nest.hvac_state = data.payload.state;\n            nest.has_leaf = data.payload.leaf;\n            nest.away = data.payload.away;\n    });\n})(scope);\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 550,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c5110632.f2e218",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "Title",
        "order": 1,
        "width": "6",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: #273746;\n                padding: 5px 5px;\n                text-align: center;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                font-weight: bold;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #808080;\"\n            ng-style=\"{background: #808080}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 550,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "7f82f9e1.9cfab8",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "ACkWh",
        "order": 10,
        "width": "3",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: black;\n                padding: 5px 5px;\n                text-align: left;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #FFE082;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : '#FFE082'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 560,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "73f55b93.59fcc4",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "PVkWh",
        "order": 11,
        "width": "3",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: black;\n                padding: 5px 5px;\n                text-align: left;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #C5E1A5;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : '#C5E1A5'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 560,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "e52f5dd2.ccc3a",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "ACcost",
        "order": 12,
        "width": "3",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: black;\n                padding: 5px 5px;\n                text-align: left;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #FFE082;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : '#FFE082'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 560,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "b5e233b.fd7e2d",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "PVsave",
        "order": 13,
        "width": "3",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: black;\n                padding: 5px 5px;\n                text-align: left;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #C5E1A5;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : '#C5E1A5'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 560,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "3a3e523a.4bb81e",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "PV%",
        "order": 14,
        "width": "3",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: black;\n                padding: 5px 5px;\n                text-align: left;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #EEEEEE;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : '#EEEEEE'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 550,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "ca24fd24.0e039",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "CO2",
        "order": 15,
        "width": "3",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: black;\n                padding: 5px 5px;\n                text-align: left;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #EEEEEE;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : '#EEEEEE'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 550,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "be70ae9d.1682c",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "Alarms",
        "order": 16,
        "width": "6",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: black;\n                padding: 5px 5px;\n                text-align: left;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #EEEEEE;\"\n            ng-style=\"{background: msg.payload == '1' ? '#E65100' : '#EEEEEE'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 560,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "ee973f35.9815d",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "AC I",
        "order": 17,
        "width": "2",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: black;\n                padding: 5px 5px;\n                text-align: left;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #EEEEEE;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : '#EEEEEE'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 550,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "ed62c97b.1d7e68",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "PV I",
        "order": 18,
        "width": "2",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: black;\n                padding: 5px 5px;\n                text-align: left;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #EEEEEE;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : '#EEEEEE'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 550,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "bcb46b7e.c68578",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "PCB",
        "order": 19,
        "width": "2",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: black;\n                padding: 5px 5px;\n                text-align: left;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #EEEEEE;\"\n            ng-style=\"{background: msg.payload == '1' ? '#E65100' : '#EEEEEE'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 550,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "8f3cdbbe.456618",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "AC",
        "order": 2,
        "width": "2",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: white;\n                padding: 5px 5px;\n                text-align: center;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: grey;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : 'grey'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 550,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "4578b6ee.9ac6d8",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "PV",
        "order": 3,
        "width": "2",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: white;\n                padding: 5px 5px;\n                text-align: center;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: grey;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : 'grey'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 550,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "a271c8d0.c90f98",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fbbc4141.094d",
        "name": "Boost",
        "order": 4,
        "width": "2",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: white;\n                padding: 5px 5px;\n                text-align: center;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: grey;\"\n            ng-style=\"{background: msg.payload == '1' ? 'DeepSkyBlue' : 'grey'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 550,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "1fb2a2ed.4b8a1d",
        "type": "rbe",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 730,
        "y": 600,
        "wires": [
            [
                "bbed780b.7eda28"
            ]
        ]
    },
    {
        "id": "8166bb4.62a0e48",
        "type": "rbe",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 730,
        "y": 580,
        "wires": [
            [
                "8be3dbec.3b3dc8"
            ]
        ]
    },
    {
        "id": "a8488942.b1e5a8",
        "type": "comment",
        "z": "6e2de0a8.936f6",
        "name": "Settings 1",
        "info": "",
        "x": 100,
        "y": 1040,
        "wires": []
    },
    {
        "id": "999dcc7f.d4ae",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "ACM",
        "func": "var str = JSON.stringify(msg.payload);\nvar n = str.includes(\"ACM\");\nif(n===true)\n{\n    msg.payload = msg.payload.O.ACM;\n    msg.text = \"AC Control\"    ;\n    node.status({text:msg.payload});\n    msg.topic = \"AC\";\n    return msg;\n}\nelse\n{\n    return null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1080,
        "wires": [
            [
                "fe269fd9.19428",
                "6f39e454.4227bc"
            ]
        ]
    },
    {
        "id": "4bce2af4.eb1fd4",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "ACO",
        "func": "var str = JSON.stringify(msg.payload);\nvar n = str.includes(\"ACO\");\nif(n===true)\n{\n    msg.payload = msg.payload.O.ACO;\n    msg.text = \"Boost\"\n    node.status({text:msg.payload});\n    return msg;\n}\nelse\n{\n    return null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1120,
        "wires": [
            [
                "26526e21.edf462",
                "2eed69ce.46f186"
            ]
        ]
    },
    {
        "id": "dc0fb41c.dc6798",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "PVM",
        "func": "var str = JSON.stringify(msg.payload);\nvar n = str.includes(\"PVM\");\nif(n===true)\n{\n    msg.payload = msg.payload.O.PVM;\n    msg.text = \"PV Control\"\n    msg.topic = \"PV\";\n    node.status({text:msg.payload});\n    return msg;}\nelse\n{\n    return null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1160,
        "wires": [
            [
                "583cb501.3814dc",
                "5123c022.9db6f"
            ]
        ]
    },
    {
        "id": "f1cb20cc.2420c",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "ACT",
        "func": "var str = JSON.stringify(msg.payload);\nvar n = str.includes(\"ACT\");\nif(n===true)\n{\n    msg.payload = msg.payload.S.ACT;\n    node.status({text:msg.payload});\n    msg.topic = \"setpoint\";\n    return msg;\n}\nelse\n{\n    return null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1200,
        "wires": [
            [
                "ab43be98.51c94"
            ]
        ]
    },
    {
        "id": "da53ebef.547fd8",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "ACOT",
        "func": "var str = JSON.stringify(msg.payload);\nvar n = str.includes(\"ACOT\");\nif(n===true)\n{\n    msg.payload = msg.payload.S.ACOT;\n    node.status({text:msg.payload});\n    msg.topic = \"setpoint\";\n    return msg;\n}\nelse\n{\n    return null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1240,
        "wires": [
            [
                "e18f7109.55303"
            ]
        ]
    },
    {
        "id": "c8fec9c7.032f68",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "PVT",
        "func": "var str = JSON.stringify(msg.payload);\nvar n = str.includes(\"PVT\");\nif(n===true)\n{\n    msg.payload = msg.payload.S.PVT;\n    node.status({text:msg.payload});\n    flow.set(\"pv1setpoint\", msg.payload);\n    return msg;\n}\nelse\n{\n    return null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1280,
        "wires": [
            [
                "a76e06d2.f8b0b8"
            ]
        ]
    },
    {
        "id": "fe269fd9.19428",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fe1ee148.0ce71",
        "name": "Status",
        "order": 2,
        "width": "4",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: white;\n                padding: 5px 5px;\n                text-align: center;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: grey;\"\n            ng-style=\"{background: msg.payload == '1' ? 'Orange' : 'grey'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 530,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "26526e21.edf462",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fe1ee148.0ce71",
        "name": "Status",
        "order": 3,
        "width": "4",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: white;\n                padding: 5px 5px;\n                text-align: center;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: grey;\"\n            ng-style=\"{background: msg.payload == '1' ? 'Orange' : 'grey'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 530,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "583cb501.3814dc",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fe1ee148.0ce71",
        "name": "Status",
        "order": 4,
        "width": "4",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: white;\n                padding: 5px 5px;\n                text-align: center;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: grey;\"\n            ng-style=\"{background: msg.payload == '1' ? 'Orange' : 'grey'}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 530,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "295f172.00aafe8",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.payload;\nvar output\t= [];\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"S\":{\n    \t\t\t\t    \"ACT\": payload\n    \t\t\t\t}\n        },\n    \t\"topic\": \"GWR/\"+flow.get(\"unit\")+\"/1/SET\"\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 1200,
        "wires": [
            [
                "daeb9e0.2803b6"
            ]
        ]
    },
    {
        "id": "ab43be98.51c94",
        "type": "ui_text_input",
        "z": "6e2de0a8.936f6",
        "name": "",
        "label": "AC Setpoint",
        "tooltip": "",
        "group": "fe1ee148.0ce71",
        "order": 8,
        "width": "0",
        "height": "0",
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 670,
        "y": 1200,
        "wires": [
            [
                "295f172.00aafe8"
            ]
        ]
    },
    {
        "id": "4aa503c7.9b8cbc",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.payload;\nvar output\t= [];\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"S\":{\n    \t\t\t\t    \"ACOT\": payload\n    \t\t\t\t}\n        },\n    \t\"topic\": \"GWR/\"+flow.get(\"unit\")+\"/1/SET\"\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\n\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 1240,
        "wires": [
            [
                "daeb9e0.2803b6"
            ]
        ]
    },
    {
        "id": "2fb11f9d.7ff33",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload;\nvar output\t= [];\nif(msg.payload > 70)    // limit to 70\n{\n    payload = 70;\n}\nelse\n{\n    payload = msg.payload;\n}\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"S\":{\n    \t\t\t\t    \"PVT\": payload\n    \t\t\t\t}\n        },\n    \t\"topic\": \"GWR/\"+flow.get(\"unit\")+\"/1/SET\"\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\n\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 1280,
        "wires": [
            [
                "daeb9e0.2803b6"
            ]
        ]
    },
    {
        "id": "e18f7109.55303",
        "type": "ui_text_input",
        "z": "6e2de0a8.936f6",
        "name": "",
        "label": "Boost Setpoint",
        "tooltip": "",
        "group": "fe1ee148.0ce71",
        "order": 9,
        "width": "0",
        "height": "0",
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 660,
        "y": 1240,
        "wires": [
            [
                "4aa503c7.9b8cbc"
            ]
        ]
    },
    {
        "id": "a76e06d2.f8b0b8",
        "type": "ui_text_input",
        "z": "6e2de0a8.936f6",
        "name": "",
        "label": "PV Setpoint",
        "tooltip": "",
        "group": "fe1ee148.0ce71",
        "order": 10,
        "width": "0",
        "height": "0",
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 670,
        "y": 1280,
        "wires": [
            [
                "2fb11f9d.7ff33"
            ]
        ]
    },
    {
        "id": "6f39e454.4227bc",
        "type": "ui_switch",
        "z": "6e2de0a8.936f6",
        "name": "",
        "label": "AC Control",
        "tooltip": "",
        "group": "fe1ee148.0ce71",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 670,
        "y": 1080,
        "wires": [
            [
                "90546bdf.a5a718"
            ]
        ]
    },
    {
        "id": "2eed69ce.46f186",
        "type": "ui_switch",
        "z": "6e2de0a8.936f6",
        "name": "",
        "label": "AC Override",
        "tooltip": "",
        "group": "fe1ee148.0ce71",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 670,
        "y": 1120,
        "wires": [
            [
                "a6554ece.9eb6"
            ]
        ]
    },
    {
        "id": "5123c022.9db6f",
        "type": "ui_switch",
        "z": "6e2de0a8.936f6",
        "name": "",
        "label": "PV Control",
        "tooltip": "",
        "group": "fe1ee148.0ce71",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 670,
        "y": 1160,
        "wires": [
            [
                "fe6e2190.dfd13"
            ]
        ]
    },
    {
        "id": "90546bdf.a5a718",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.payload;\nvar output\t= [];\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"O\":{\n    \t\t\t\t    \"ACM\": payload\n    \t\t\t\t}\n        },\n    \t\"topic\": \"GWR/\"+flow.get(\"unit\")+\"/1/SET\"\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\nnode.status({text:msg.payload});\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 1080,
        "wires": [
            [
                "daeb9e0.2803b6"
            ]
        ]
    },
    {
        "id": "a6554ece.9eb6",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.payload;\nvar output\t= [];\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"O\":{\n    \t\t\t\t    \"ACO\": payload\n    \t\t\t\t}\n        },\n    \t\"topic\": \"GWR/\"+flow.get(\"unit\")+\"/1/SET\"\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 1120,
        "wires": [
            [
                "daeb9e0.2803b6"
            ]
        ]
    },
    {
        "id": "fe6e2190.dfd13",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload = msg.payload;\nvar output\t= [];\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"O\":{\n    \t\t\t\t    \"PVM\": payload\n    \t\t\t\t}\n        },\n    \t\"topic\": \"GWR/\"+flow.get(\"unit\")+\"/1/SET\"\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 1160,
        "wires": [
            [
                "daeb9e0.2803b6"
            ]
        ]
    },
    {
        "id": "68a34261.c75eec",
        "type": "ui_template",
        "z": "6e2de0a8.936f6",
        "group": "fe1ee148.0ce71",
        "name": "Title",
        "order": 1,
        "width": "4",
        "height": "1",
        "format": "<!DOCTYPE html>\n<html>\n    <body>\n        <div \n            style=\n                \"border: none;\n                color: #273746;\n                padding: 5px 5px;\n                text-align: center;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 14px;\n                font-weight: bold;\n                margin: 0px;\n                border-radius: 6px;\n                background-color: #808080;\"\n            ng-style=\"{background: #808080}\"\n            ng-bind-html=\"msg.text\"\n        >\n        </div>\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 830,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "6b8fd21.e4f252c",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "msg.payload=1\nmsg.text = \"Settings\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1040,
        "wires": [
            [
                "68a34261.c75eec"
            ]
        ]
    },
    {
        "id": "74efd036.73c12",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "ACCT",
        "func": "var str = JSON.stringify(msg.payload);\nvar n = str.includes(\"ACCT\");\nif(n===true)\n{\n    msg.payload = msg.payload.S.ACCT;\n    node.status({text:msg.payload});\n    return msg;\n}\nelse\n{\n    return null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1320,
        "wires": [
            [
                "fc7f2b1c.53ff48"
            ]
        ]
    },
    {
        "id": "fc7f2b1c.53ff48",
        "type": "ui_text_input",
        "z": "6e2de0a8.936f6",
        "name": "",
        "label": "Comfort Setpoint",
        "tooltip": "",
        "group": "fe1ee148.0ce71",
        "order": 11,
        "width": "0",
        "height": "0",
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 650,
        "y": 1320,
        "wires": [
            [
                "eae16ac4.f8c9c8"
            ]
        ]
    },
    {
        "id": "eae16ac4.f8c9c8",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "var payload;\nvar unit = flow.get(\"unit\");\nvar output\t= [];\nif(msg.payload > 70)    // limit to 70\n{\n    payload = 70;\n}\nelse\n{\n    payload = msg.payload;\n}\n\nvar setpoint = {\n        \"payload\": {\n\t\t\t\t    \"S\":{\n    \t\t\t\t    \"ACCT\": payload\n    \t\t\t\t}\n        },\n    \t\"topic\": \"GWR/\"+flow.get(\"unit\")+\"/1/SET\"\n};\n\t\t//-----------------------------------------------------------------------------------------\n\noutput\t=\t[\n\t\t\t\tsetpoint\n\t\t\t];\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 1320,
        "wires": [
            [
                "daeb9e0.2803b6"
            ]
        ]
    },
    {
        "id": "8f9d2f8b.fa601",
        "type": "ui_text",
        "z": "6e2de0a8.936f6",
        "group": "fe1ee148.0ce71",
        "order": 11,
        "width": "4",
        "height": "2",
        "name": "Blank",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d3f32d8d.5c11e",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "Get Settings",
        "func": "// GWA/gwCECC50E32854A4/1/SET\nvar unit = flow.get(\"unit\");\nmsg.topic = \"GWA/\"+unit+\"/1/SET\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "874baa5e.769658"
            ]
        ]
    },
    {
        "id": "7fe979c3.532ac8",
        "type": "inject",
        "z": "6e2de0a8.936f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 380,
        "wires": [
            [
                "d3f32d8d.5c11e"
            ]
        ]
    },
    {
        "id": "ceb97731.2742e8",
        "type": "comment",
        "z": "6e2de0a8.936f6",
        "name": "Save data to SQL",
        "info": "Save data to SQL",
        "x": 730,
        "y": 220,
        "wires": []
    },
    {
        "id": "b193e821.19e0a8",
        "type": "function",
        "z": "6e2de0a8.936f6",
        "name": "",
        "func": "// GW/gwCECC50E32854A4/1/SET\nvar unit = flow.get(\"unit\");\nmsg.topic = \"GW/\"+unit+\"/1/SET\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "bfc51bfa.b51d78"
            ]
        ]
    },
    {
        "id": "bfc51bfa.b51d78",
        "type": "mqtt-in-dynamicsub",
        "z": "6e2de0a8.936f6",
        "name": "",
        "qos": "2",
        "datatype": "json",
        "unsubscribe-after-first-msg-recv": false,
        "debug-subscribe": false,
        "broker": "ea070992.9873a8",
        "x": 290,
        "y": 1080,
        "wires": [
            [
                "6b8fd21.e4f252c",
                "4bce2af4.eb1fd4",
                "dc0fb41c.dc6798",
                "f1cb20cc.2420c",
                "da53ebef.547fd8",
                "c8fec9c7.032f68",
                "74efd036.73c12"
            ]
        ]
    },
    {
        "id": "daeb9e0.2803b6",
        "type": "mqtt out",
        "z": "6e2de0a8.936f6",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "ea070992.9873a8",
        "x": 970,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a48dbabf.4f5808",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var m={};\nm.labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\nm.series = ['Series A', 'Series B', 'Series C'];\nm.data = [\n    [65, 59, 80, 81, 56, 55, 40],\n    [28, 48, 40, 19, 86, 27, 90],\n    [38, 28, 20, 49, 45, 60, 20]\n  ];\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 400,
        "wires": [
            [
                "650b4d79.f130c4",
                "4a76f20d.8e4ddc",
                "58ab75b.7e7d58c",
                "90af7f6b.a9a9e"
            ]
        ]
    },
    {
        "id": "650b4d79.f130c4",
        "type": "ui_chart",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "44d9222c.07961c",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "line chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 580,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e403a5c3.e8fe28",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n    \"data\":[[{\"x\":1504029632890,\"y\":5},{\"x\":1504029636001,\"y\":4},{\"x\":1504029638656,\"y\":2}],[{\"x\":1504029633514,\"y\":6},{\"x\":1504029636622,\"y\":7},{\"x\":1504029639539,\"y\":6}],[{\"x\":1504029634400,\"y\":7},{\"x\":1504029637959,\"y\":9},{\"x\":1504029640317,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 240,
        "wires": [
            [
                "650b4d79.f130c4"
            ]
        ]
    },
    {
        "id": "487b12db.06998c",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 1",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "e403a5c3.e8fe28"
            ]
        ]
    },
    {
        "id": "4a76f20d.8e4ddc",
        "type": "ui_chart",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "44d9222c.07961c",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "bar chart",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 580,
        "y": 200,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "20bdd016.7aed1",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 120,
        "y": 400,
        "wires": [
            [
                "a48dbabf.4f5808"
            ]
        ]
    },
    {
        "id": "5083c707.fc7158",
        "type": "random",
        "z": "11c86329.c3b39d",
        "name": "",
        "low": "1",
        "high": "10000000",
        "inte": "true",
        "x": 310,
        "y": 600,
        "wires": [
            [
                "650b4d79.f130c4"
            ]
        ]
    },
    {
        "id": "9dc648e5.2a4238",
        "type": "inject",
        "z": "11c86329.c3b39d",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 600,
        "wires": [
            [
                "5083c707.fc7158"
            ]
        ]
    },
    {
        "id": "b0090ec8.78586",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var m={};\nm.labels = [10,20,30,40,50,60,70];\nm.series = ['Series A', 'Series B', 'Series C', 'Series D'];\nm.data = [\n    [65, 59, 80, 81, 56, 55, 40],\n    [28, 48, 40, 19, 86, 27, 90],\n    [38, 28, 20, 49, 45, 60, 20],\n    [58, 18, 40, 29, 15, 30, 60]\n  ];\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "650b4d79.f130c4",
                "4a76f20d.8e4ddc",
                "58ab75b.7e7d58c",
                "90af7f6b.a9a9e"
            ]
        ]
    },
    {
        "id": "b20275c0.f96e88",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array2",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 120,
        "y": 440,
        "wires": [
            [
                "b0090ec8.78586"
            ]
        ]
    },
    {
        "id": "ab8c5bb0.4508e8",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n        \"data\":[[{\"x\":1,\"y\":5},{\"x\":2,\"y\":4},{\"x\":3,\"y\":2}],[{\"x\":4,\"y\":6},{\"x\":5,\"y\":7},{\"x\":6,\"y\":6}],[{\"x\":7,\"y\":7},{\"x\":8,\"y\":9},{\"x\":9,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 280,
        "wires": [
            [
                "650b4d79.f130c4"
            ]
        ]
    },
    {
        "id": "43f904d1.7a134c",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 2",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "ab8c5bb0.4508e8"
            ]
        ]
    },
    {
        "id": "829fdc33.00756",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var m = {};\nm.labels = [\"Download\", \"In-Store\", \"Mail-Order\"];\nm.data = [[300, 500, 100]];\nm.series = [\"Sales\"];\nreturn {payload:[m],topic:msg.topic};",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 640,
        "wires": [
            [
                "90af7f6b.a9a9e",
                "4a76f20d.8e4ddc",
                "650b4d79.f130c4",
                "ecc5d625.b10208",
                "ad18c6bb.5616b8",
                "58ab75b.7e7d58c"
            ]
        ]
    },
    {
        "id": "90af7f6b.a9a9e",
        "type": "ui_chart",
        "z": "11c86329.c3b39d",
        "name": "pie chart",
        "group": "44d9222c.07961c",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "pie chart",
        "chartType": "pie",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 580,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e3265c1e.a374",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array for pie",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Pie 4 T",
        "x": 140,
        "y": 640,
        "wires": [
            [
                "829fdc33.00756"
            ]
        ]
    },
    {
        "id": "f8f677b.1576d88",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n        \"data\":[[{\"x\":1000000,\"y\":5},{\"x\":2000000,\"y\":4},{\"x\":3000000,\"y\":2}],[{\"x\":4000000,\"y\":6},{\"x\":5000000,\"y\":7},{\"x\":6000000,\"y\":6}],[{\"x\":7000000,\"y\":7},{\"x\":8000000,\"y\":9},{\"x\":9000000,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 320,
        "wires": [
            [
                "650b4d79.f130c4"
            ]
        ]
    },
    {
        "id": "f3e12c6.63e10d",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 3",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "f8f677b.1576d88"
            ]
        ]
    },
    {
        "id": "42352d8a.c44564",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n        \"data\":[[{\"x\":1000000000,\"y\":5},{\"x\":2000000000,\"y\":4},{\"x\":3000000000,\"y\":2}],[{\"x\":4000000000,\"y\":6},{\"x\":5000000000,\"y\":7},{\"x\":6000000000,\"y\":6}],[{\"x\":7000000000,\"y\":7},{\"x\":8000000000,\"y\":9},{\"x\":9000000000,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 360,
        "wires": [
            [
                "650b4d79.f130c4"
            ]
        ]
    },
    {
        "id": "f6d9c377.8e3bf",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 4",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "42352d8a.c44564"
            ]
        ]
    },
    {
        "id": "a9999623.3ecc08",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var m={\n    \"series\":[\"X\",\"Y\",\"Z\"],\n    \"data\":[[5,6,9],[3,8,5],[6,7,2]],\n    \"labels\":[\"Jan\",\"Feb\",\"Mar\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 560,
        "wires": [
            [
                "650b4d79.f130c4",
                "4a76f20d.8e4ddc",
                "90af7f6b.a9a9e",
                "ecc5d625.b10208",
                "ad18c6bb.5616b8",
                "58ab75b.7e7d58c"
            ]
        ]
    },
    {
        "id": "4acffbad.64b224",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array3c",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "a9999623.3ecc08"
            ]
        ]
    },
    {
        "id": "24b7730c.4a578c",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array 2 for pie",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Pie Hole",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "fd0702c5.9feba"
            ]
        ]
    },
    {
        "id": "fd0702c5.9feba",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var m = {};\nm.labels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\nm.data = [[28, 48, 40, 19, 86, 27, 90]];\nm.series = ['Series A'];\nreturn {payload:[m],topic:msg.topic};",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 680,
        "wires": [
            [
                "90af7f6b.a9a9e",
                "4a76f20d.8e4ddc",
                "ad18c6bb.5616b8",
                "ecc5d625.b10208",
                "650b4d79.f130c4",
                "58ab75b.7e7d58c"
            ]
        ]
    },
    {
        "id": "ea92c7ed.51ace8",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "topic",
        "func": "var m = [\n    {topic:\"X\", payload:22},\n    {topic:\"Y\", payload:66},\n    {topic:\"Z\", payload:42}\n    ];\nreturn [m];",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 200,
        "wires": [
            [
                "4a76f20d.8e4ddc",
                "90af7f6b.a9a9e",
                "650b4d79.f130c4",
                "58ab75b.7e7d58c"
            ]
        ]
    },
    {
        "id": "520a6f12.347fd",
        "type": "inject",
        "z": "11c86329.c3b39d",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "ea92c7ed.51ace8"
            ]
        ]
    },
    {
        "id": "91c7e52e.e90908",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "label",
        "func": "var m = [\n    {label:\"A\", payload:22},\n    {label:\"B\", payload:66},\n    {label:\"C\", payload:42},\n    ];\nreturn [m];",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "4a76f20d.8e4ddc",
                "90af7f6b.a9a9e",
                "650b4d79.f130c4",
                "58ab75b.7e7d58c"
            ]
        ]
    },
    {
        "id": "16488b9e.ab8074",
        "type": "inject",
        "z": "11c86329.c3b39d",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "91c7e52e.e90908"
            ]
        ]
    },
    {
        "id": "f7c8e510.a97688",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var m={\n    \"series\":[\"X\",\"Y\",\"Z\"],\n    \"data\":[[5],[3],[6]],\n    \"labels\":[\"Jan\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 480,
        "wires": [
            [
                "4a76f20d.8e4ddc",
                "ecc5d625.b10208",
                "ad18c6bb.5616b8",
                "650b4d79.f130c4",
                "58ab75b.7e7d58c",
                "90af7f6b.a9a9e"
            ]
        ]
    },
    {
        "id": "75e26eee.82da2",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array3a",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "f7c8e510.a97688"
            ]
        ]
    },
    {
        "id": "4f7a2070.17bf2",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "",
        "func": "var m={\n    \"series\":[\"X\"],\n    \"data\":[[5,3,6]],\n    \"labels\":[\"Jan\",\"Feb\",\"Mar\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 520,
        "wires": [
            [
                "4a76f20d.8e4ddc",
                "650b4d79.f130c4",
                "ad18c6bb.5616b8",
                "ecc5d625.b10208",
                "58ab75b.7e7d58c",
                "90af7f6b.a9a9e"
            ]
        ]
    },
    {
        "id": "259b3aa4.010d16",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array3b",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "4f7a2070.17bf2"
            ]
        ]
    },
    {
        "id": "58ab75b.7e7d58c",
        "type": "ui_chart",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "ef33233b.dd28f",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "horizontal bar",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 600,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ecc5d625.b10208",
        "type": "ui_chart",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "ef33233b.dd28f",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "polar chart",
        "chartType": "polar-area",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 590,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ad18c6bb.5616b8",
        "type": "ui_chart",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "ef33233b.dd28f",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "radar chart",
        "chartType": "radar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 590,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "549bbd5b.fb6494",
        "type": "function",
        "z": "11c86329.c3b39d",
        "name": "label",
        "func": "var m = [\n    {label:\"A\", payload:22, series:\"X\"},\n    {label:\"B\", payload:66, series:\"X\"},\n    {label:\"C\", payload:42, series:\"X\"},\n    {label:\"A\", payload:33, series:\"Y\"},\n    {label:\"B\", payload:72, series:\"Y\"},\n    {label:\"C\", payload:12, series:\"Y\"},\n    {label:\"A\", payload:44, series:\"Z\"},\n    {label:\"B\", payload:32, series:\"Z\"},\n    {label:\"C\", payload:80, series:\"Z\"}\n    ];\nreturn [m];",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 120,
        "wires": [
            [
                "90af7f6b.a9a9e",
                "4a76f20d.8e4ddc",
                "650b4d79.f130c4",
                "58ab75b.7e7d58c"
            ]
        ]
    },
    {
        "id": "b37cbbe5.9aa2e8",
        "type": "inject",
        "z": "11c86329.c3b39d",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "549bbd5b.fb6494"
            ]
        ]
    },
    {
        "id": "5c9d5603.ee6e78",
        "type": "ui_button",
        "z": "11c86329.c3b39d",
        "name": "",
        "group": "afe97566.fbda58",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear All",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "x": 270,
        "y": 80,
        "wires": [
            [
                "ad18c6bb.5616b8",
                "ecc5d625.b10208",
                "90af7f6b.a9a9e",
                "58ab75b.7e7d58c",
                "4a76f20d.8e4ddc",
                "650b4d79.f130c4"
            ]
        ]
    },
    {
        "id": "1d862422.f0204c",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "loop",
        "func": "// Loop function\n// Top output provides triger for next actions\n// Botton output should be connected to the input through a dealy\n// The msg.payload can consis one of actions: start, stop, toggle\n// Other content is ignored\n// On the outoput the msg.payload contains current loop state\n\ncontext.loop = context.loop || \"stop\";\ncontext.loops = context.loops || 0;\n\n\n//console.log(\"topic :\" + msg.topic);\n//console.log(\"loop  :\" + context.loop);\n//console.log(\"loops :\" + context.loops);\n//console.log(\"action:\" + msg.payload);\n\nswitch (msg.payload) {\n\tcase \"stop\":\n\t\tcontext.loops = context.loops + 1;\n\t\tmsg.payload = \"stopped\";\n\t\tcontext.loop = \"stop\";\n\t\treturn [msg,{payload:\"reset\",reset:\"reset\",delay:0}];\n\tcase \"toggle\":\n\t\tif (context.loop == \"start\") {\n\t\t\tmsg.payload = \"stopped\";\n\t\t\tcontext.loop = \"stop\";\n\t\t\treturn [msg,{payload:\"set delay\",delay:500}];\n\t\t} else {\n\t\t\tmsg.payload = \"started\";\n\t\t\tcontext.loop = \"loop\";\n\t\t\tcontext.loops = 1;\n\t\t\treturn [msg,{payload:\"set delay\",delay:500}];\n\t\t}\n\tcase \"start\":\n\t\tmsg.payload = \"started\";\n\t\tcontext.loop = \"loop\";\n\t\tcontext.loops = 1;\n\t\treturn [msg,{payload:\"set delay\",delay:500}];\n\tdefault:\n\t\tif (context.loop == \"loop\") {\n\t\t\tcontext.loops = context.loops + 1;\n\t\t\tvar loopNo = context.loops;\n\t\t\tmsg.payload = \"loop:\" + context.loops;\n\t\t\treturn [msg,{payload:\"set delay\",delay:loopNo * 300,loop:loopNo}];\n\t\t} else {\n\t\t\treturn [null,null]; \n\t\t}\n}",
        "outputs": "2",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "5b5c92ce.cd181c"
            ],
            [
                "21ce92a0.94700e",
                "a4735c67.3d9cf"
            ]
        ]
    },
    {
        "id": "21ce92a0.94700e",
        "type": "delay",
        "z": "f66f1d13.6d699",
        "name": "",
        "pauseType": "delayv",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "1d862422.f0204c"
            ]
        ]
    },
    {
        "id": "5b5c92ce.cd181c",
        "type": "debug",
        "z": "f66f1d13.6d699",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "msg",
        "x": 550,
        "y": 60,
        "wires": []
    },
    {
        "id": "9fca89cb.119ef8",
        "type": "inject",
        "z": "f66f1d13.6d699",
        "name": "toggle loop 1",
        "props": [
            {
                "p": "payload",
                "v": "toggle",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "loop1",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "loop1",
        "payload": "toggle",
        "payloadType": "str",
        "x": 142,
        "y": 79,
        "wires": [
            [
                "1d862422.f0204c"
            ]
        ]
    },
    {
        "id": "49be7e54.d8879",
        "type": "inject",
        "z": "f66f1d13.6d699",
        "name": "stop loop 1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "loop1",
        "payload": "stop",
        "payloadType": "str",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "1d862422.f0204c"
            ]
        ]
    },
    {
        "id": "a4735c67.3d9cf",
        "type": "debug",
        "z": "f66f1d13.6d699",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "delay",
        "statusType": "msg",
        "x": 550,
        "y": 100,
        "wires": []
    },
    {
        "id": "5d3cd480.cb1dbc",
        "type": "inject",
        "z": "f66f1d13.6d699",
        "name": "start loop 1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "loop1",
        "payload": "start",
        "payloadType": "str",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "1d862422.f0204c"
            ]
        ]
    },
    {
        "id": "e9dddebe.b4e6f",
        "type": "comment",
        "z": "f66f1d13.6d699",
        "name": "Variable delay time, set within function",
        "info": "The aim is to compare the required value against a known state. Is the value is > then dim down over a number of step\n\nif the value is < then dim up over a number of steps",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "e4984393.2e0f",
        "type": "function",
        "z": "3c1a9880.5362b8",
        "name": "set coords",
        "func": "var lat = env.get(\"Latitude\"); \nvar long = env.get(\"Longitude\");\n\n\nflow.set(\"$parent.Latitude\", lat);    \nflow.set(\"$parent.Longitude\", long);\n\n\nmsg.payload = \"Your postition has been saved to: Latitude: \" + lat + \", Longitude: \" + long;\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b4d748c2.964458",
        "type": "comment",
        "z": "9a41cfce.1af98",
        "name": "Get Sun Info (the easy way)",
        "info": "![enter image description here](https://notenoughtech.com/wp-content/uploads/2019/02/YouTube_NEW1-2.jpg)\nYou could use bigtimer node to play with time, or you can use JS time methods and open source API to calculate your own based on coordinates! \n\n  [Complete instructions](https://notenoughtech.com/home-automation/nodered-home-automation/nodered-sun-and-time/)\n\n\n**Features**:\n-   tell you if it's **night** or **day**\n-   tell you the **sunrise** and **sunset time**\n-   tell you the **day length**\n-   provide you with **astronomical, nautical, civil dusk and dawn times**\n-   use these values to create timers\n-   **all that good stuff in your local time!**\n\n## Settings\nConfigure **Set Coords** Subflow with your Lat and Long and the time variables will be available as globals.\n",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "70af04bf.eda9ac",
        "type": "function",
        "z": "9a41cfce.1af98",
        "name": "Is it night time yet? ",
        "func": "var time = new Date();\nvar timeNow = time.getTime();\n\nvar sunsetToday  = global.get('Time_sunset');\nvar sunriseToday = global.get('Time_sunrise');\n\n\nif(timeNow < sunsetToday && timeNow > sunriseToday){\n    msg.payload = \"it's daytime\"\n    var x = \"day\";\n    global.set(\"TimeOfDay\", x)\n    \n}\n\nif(timeNow > sunriseToday && timeNow < sunsetToday){\n    msg.payload = \"it's night\";\n    x = \"night\";\n    global.set(\"TimeOfDay\", x)\n    \n}\n\nif(timeNow > sunsetToday){\n    msg.payload = \"it's day\"\n    x = \"day\";\n    global.set(\"TimeOfDay\", x)\n}\nif(timeNow < sunriseToday){\n    msg.payload = \"it's night\"\n    x = \"night\";\n    global.set(\"TimeOfDay\", x)\n}\n\n\nmsg.times = {\n    \"sunset\": sunsetToday,\n    \"sunrise\": sunriseToday,\n    \"time\": timeNow\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 220,
        "wires": [
            [
                "23a54d27.f7ae12"
            ]
        ]
    },
    {
        "id": "c087b80a.3ea4e8",
        "type": "inject",
        "z": "9a41cfce.1af98",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 220,
        "wires": [
            [
                "70af04bf.eda9ac"
            ]
        ]
    },
    {
        "id": "23a54d27.f7ae12",
        "type": "debug",
        "z": "9a41cfce.1af98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 450,
        "y": 220,
        "wires": []
    },
    {
        "id": "7385ff21.db712",
        "type": "function",
        "z": "9a41cfce.1af98",
        "name": "Save Recalculated times (the easy way)",
        "func": "let date = new Date()\ntimeZoneOffset = date.getTimezoneOffset() *60;\n\nfunction recalculateTime(x){\n    var z = new Date(x).valueOf();\n    var adjustedTime = (z/1000 + (-1* timeZoneOffset))*1000;\n    return new Date(adjustedTime);\n}\n\nfunction secondsToHms(d) {\n    d = Number(d);\n\n    var h = Math.floor(d / 3600);\n    var m = Math.floor(d % 3600 / 60);\n\n    return ('0' + h).slice(-2) + \"h \" + ('0' + m).slice(-2)+\"min\";\n}\n\nfunction stringtodate(timenow){\n    let date1 = Date.parse(timenow);\n    return date1;\n    \n}\n\n\n\n//sunrise\nvar sunrise = recalculateTime(msg.payload.results.sunrise);\nglobal.set('Time_sunrise', stringtodate(sunrise));\n\n\n//sunset\nvar sunset = recalculateTime(msg.payload.results.sunset);\nglobal.set('Time_sunset', stringtodate(sunset));\n\n//solar_noon\nvar solar_noon = recalculateTime(msg.payload.results.solar_noon);\nglobal.set('Time_solar_noon', solar_noon);\n\n//day_length\nvar day_length =  secondsToHms(msg.payload.results.day_length);\nglobal.set('Time_day_length', day_length);\n\n//civil_twilight_begin\nvar civil_twilight_begin = recalculateTime(msg.payload.results.civil_twilight_begin);\nglobal.set('Time_civil_twilight_begin', civil_twilight_begin);\n\n//civil_twilight_end\nvar civil_twilight_end = recalculateTime(msg.payload.results.civil_twilight_end);\nglobal.set('Time_civil_twilight_end', civil_twilight_end);\n\n//nautical_twilight_begin\nvar nautical_twilight_begin = recalculateTime(msg.payload.results.nautical_twilight_begin);\nglobal.set('Time_nautical_twilight_begin', nautical_twilight_begin);\n\n//nautical_twilight_end\nvar nautical_twilight_end = recalculateTime(msg.payload.results.nautical_twilight_end);\nglobal.set('Time_nautical_twilight_end', nautical_twilight_end);\n\n//astronomical_twilight_begin\nvar astronomical_twilight_begin = recalculateTime(msg.payload.results.astronomical_twilight_begin);\nglobal.set('Time_astronomical_twilight_begin', astronomical_twilight_begin);\n\n//astronomical_twilight_end\nvar astronomical_twilight_end = recalculateTime(msg.payload.results.astronomical_twilight_end);\nglobal.set('Time_astronomical_twilight_end', astronomical_twilight_end);\n\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 120,
        "wires": [
            [
                "cb211691.e1b758"
            ]
        ]
    },
    {
        "id": "e9877573.665778",
        "type": "inject",
        "z": "9a41cfce.1af98",
        "name": "Get Sun info",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "2e046768.df3b98"
            ]
        ]
    },
    {
        "id": "2e046768.df3b98",
        "type": "function",
        "z": "9a41cfce.1af98",
        "name": "Get Sunset info",
        "func": "var latitude = flow.get('Latitude');\nvar longitude = flow.get('Longitude');\n\n\nmsg.url = \"https://api.sunrise-sunset.org/json?&formatted=0&lat=\"+ latitude +\"&lng=\"+ longitude;\n\nreturn msg;\n\n//https://sunrise-sunset.org/api\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "ca8fc61a.4edfc8"
            ]
        ]
    },
    {
        "id": "ca8fc61a.4edfc8",
        "type": "http request",
        "z": "9a41cfce.1af98",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 450,
        "y": 120,
        "wires": [
            [
                "7385ff21.db712"
            ]
        ]
    },
    {
        "id": "4978fd5c.9ce3b4",
        "type": "comment",
        "z": "9a41cfce.1af98",
        "name": "Is it night time yet",
        "info": "",
        "x": 100,
        "y": 180,
        "wires": []
    },
    {
        "id": "cb211691.e1b758",
        "type": "debug",
        "z": "9a41cfce.1af98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 120,
        "wires": []
    },
    {
        "id": "3819bf75.48118",
        "type": "subflow:3c1a9880.5362b8",
        "z": "9a41cfce.1af98",
        "name": "",
        "env": [
            {
                "name": "Latitude",
                "value": "-26.2041",
                "type": "num"
            },
            {
                "name": "Longitude",
                "value": "28.0473",
                "type": "num"
            }
        ],
        "x": 270,
        "y": 80,
        "wires": [
            [
                "3bfd7e32.682882"
            ]
        ],
        "icon": "node-red/cog.svg"
    },
    {
        "id": "1b36c3d1.00f07c",
        "type": "inject",
        "z": "9a41cfce.1af98",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "true",
                "vt": "bool"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "3819bf75.48118"
            ]
        ]
    },
    {
        "id": "3bfd7e32.682882",
        "type": "debug",
        "z": "9a41cfce.1af98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 80,
        "wires": []
    },
    {
        "id": "69567a2e.9bba14",
        "type": "link in",
        "z": "6e2de0a8.936f6",
        "name": "",
        "links": [
            "1f464150.6118ff"
        ],
        "x": 75,
        "y": 1080,
        "wires": [
            [
                "b193e821.19e0a8"
            ]
        ]
    },
    {
        "id": "1f464150.6118ff",
        "type": "link out",
        "z": "6e2de0a8.936f6",
        "name": "",
        "links": [
            "69567a2e.9bba14"
        ],
        "x": 175,
        "y": 120,
        "wires": []
    },
    {
        "id": "a6e66e24.246eb",
        "type": "ui_chart",
        "z": "9a41cfce.1af98",
        "name": "Temperature Chart",
        "group": "c467b276.39485",
        "order": 2,
        "width": "4",
        "height": "3",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "40",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1030,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "56590d76.972014",
        "type": "mqtt in",
        "z": "9a41cfce.1af98",
        "name": "",
        "topic": "weatherStation/temperature",
        "qos": "1",
        "broker": "171132c7.ece67d",
        "x": 160,
        "y": 400,
        "wires": [
            [
                "a6e66e24.246eb",
                "4e7da728.df7028",
                "f62c1c11.ee6cb"
            ]
        ]
    },
    {
        "id": "aa8c644f.d09798",
        "type": "mqtt in",
        "z": "9a41cfce.1af98",
        "name": "",
        "topic": "weatherStation/humidity",
        "qos": "1",
        "broker": "171132c7.ece67d",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "af9c7600.6c5cf8",
                "f62c1c11.ee6cb"
            ]
        ]
    },
    {
        "id": "f2c9049d.343428",
        "type": "ui_chart",
        "z": "9a41cfce.1af98",
        "name": "Humidity Chart",
        "group": "c467b276.39485",
        "order": 4,
        "width": "4",
        "height": "3",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1020,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "af9c7600.6c5cf8",
        "type": "smooth",
        "z": "9a41cfce.1af98",
        "name": "",
        "action": "mean",
        "count": "100",
        "round": "",
        "mult": "single",
        "x": 420,
        "y": 360,
        "wires": [
            [
                "f2c9049d.343428",
                "ab3492b0.fa195"
            ]
        ]
    },
    {
        "id": "6ffbf102.708af",
        "type": "mqtt in",
        "z": "9a41cfce.1af98",
        "name": "",
        "topic": "weatherStation/pressure",
        "qos": "1",
        "broker": "171132c7.ece67d",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "494cb1a9.47f47"
            ]
        ]
    },
    {
        "id": "494cb1a9.47f47",
        "type": "function",
        "z": "9a41cfce.1af98",
        "name": "pascal to hecto",
        "func": "msg.payload *= 0.01;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 440,
        "wires": [
            [
                "31d0bf64.cd69a",
                "f62c1c11.ee6cb"
            ]
        ]
    },
    {
        "id": "ab3492b0.fa195",
        "type": "ui_gauge",
        "z": "9a41cfce.1af98",
        "name": "",
        "group": "c467b276.39485",
        "order": 3,
        "width": "2",
        "height": "3",
        "gtype": "wave",
        "title": "Humidity",
        "label": "%",
        "format": "{{value|number:1}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#5a5a5a",
            "#34b92d",
            "#0202ff"
        ],
        "seg1": "",
        "seg2": "",
        "x": 840,
        "y": 360,
        "wires": []
    },
    {
        "id": "4e7da728.df7028",
        "type": "ui_gauge",
        "z": "9a41cfce.1af98",
        "name": "",
        "group": "c467b276.39485",
        "order": 1,
        "width": "2",
        "height": "3",
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{value|number:1}}",
        "min": "-20",
        "max": "50",
        "colors": [
            "#0000ff",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "0",
        "seg2": "30",
        "x": 850,
        "y": 400,
        "wires": []
    },
    {
        "id": "31d0bf64.cd69a",
        "type": "ui_gauge",
        "z": "9a41cfce.1af98",
        "name": "",
        "group": "c467b276.39485",
        "order": 7,
        "width": "2",
        "height": "3",
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value|number:2}}",
        "min": "900",
        "max": "1100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 840,
        "y": 440,
        "wires": []
    },
    {
        "id": "442a7dcc.09d934",
        "type": "mqtt in",
        "z": "9a41cfce.1af98",
        "name": "",
        "topic": "weatherStation/light",
        "qos": "1",
        "broker": "171132c7.ece67d",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "dff18ee1.f7d5d",
                "f62c1c11.ee6cb",
                "c93b1e3a.d4f99"
            ]
        ]
    },
    {
        "id": "dff18ee1.f7d5d",
        "type": "ui_gauge",
        "z": "9a41cfce.1af98",
        "name": "",
        "group": "c467b276.39485",
        "order": 5,
        "width": "2",
        "height": "3",
        "gtype": "gage",
        "title": "Light",
        "label": "",
        "format": "{{value|number:2}}",
        "min": "0",
        "max": "1",
        "colors": [
            "#000080",
            "#c0c0c0",
            "#ffff80"
        ],
        "seg1": "",
        "seg2": "",
        "x": 830,
        "y": 480,
        "wires": []
    },
    {
        "id": "e1dc9a15.31a108",
        "type": "function",
        "z": "9a41cfce.1af98",
        "name": "state to finished html icon",
        "func": "\nvar moon = \"&#127769;\";\nvar rain = \"&#127783;\";\nvar sun = \"&#127774\";\nvar cloud = \"&#9925;\";\n\ncontext.humidity = context.humidity || 50;\ncontext.light = context.light || 0.5;\ncontext.pressure = context.pressure || 1000;\n\nif(msg.topic === 'humidity' && msg.payload != 'nan')\n context.humidity = msg.payload;\nif(msg.topic === 'light' && msg.payload != 'nan')\n context.light = msg.payload;\nif(msg.topic === 'pressure' && msg.payload != 'nan')\n context.pressure = msg.payload;\n\nif(context.humidity < 50)\n{\n if(context.light > 0.1)\n msg.payload = sun;\n else\n msg.payload = moon;\n}\nelse \nif(context.humidity < 80)\n{\n //if(context.light > 0.1)\n msg.payload = cloud;\n //else\n // msg.payload = moon;\n}\nelse\n{\n msg.payload = rain;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 520,
        "wires": [
            [
                "85c7cf27.1e66e"
            ]
        ]
    },
    {
        "id": "f62c1c11.ee6cb",
        "type": "change",
        "z": "9a41cfce.1af98",
        "name": "translate topic",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "weatherStation/humidity",
                "fromt": "str",
                "to": "humidity",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "weatherStation/temperature",
                "fromt": "str",
                "to": "temperature",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "weatherStation/light",
                "fromt": "str",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "weatherStation/pressure",
                "fromt": "str",
                "to": "pressure",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 520,
        "wires": [
            [
                "e1dc9a15.31a108"
            ]
        ]
    },
    {
        "id": "85c7cf27.1e66e",
        "type": "ui_template",
        "z": "9a41cfce.1af98",
        "group": "c467b276.39485",
        "name": "Weather symbol",
        "order": 8,
        "width": "3",
        "height": "3",
        "format": "<div ng-bind-html=\"msg.payload\" style=\"font-size: 50pt\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 860,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "c93b1e3a.d4f99",
        "type": "ui_chart",
        "z": "9a41cfce.1af98",
        "name": "Light Chart",
        "group": "c467b276.39485",
        "order": 6,
        "width": "4",
        "height": "3",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1010,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "dd09ea56.667bf8",
        "type": "function",
        "z": "20f5b48f.283ffc",
        "name": "",
        "func": "var x = env.get(\"TimerNumber\"); \nvar y = env.get(\"PayloadON\"); \nvar z = env.get(\"PayloadOFF\"); \n\nflow.set(\"$parent.Timer\"+x, x);\nflow.set(\"$parent.Payload\"+x+\"_on\", y);\nflow.set(\"$parent.Payload\"+x+\"_off\", z);\n\n\n\nmsg.payload = \"Your timer \" + x + \" has been set\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "ea0173e6.c072d",
        "type": "schedex",
        "z": "f66f1d13.6d699",
        "name": "Timer",
        "passthroughunhandled": false,
        "suspended": false,
        "lat": "-26",
        "lon": "28",
        "ontime": "",
        "ontopic": "",
        "onpayload": "",
        "onoffset": "",
        "onrandomoffset": 0,
        "offtime": "",
        "offtopic": "",
        "offpayload": "",
        "offoffset": "",
        "offrandomoffset": 0,
        "mon": false,
        "tue": false,
        "wed": false,
        "thu": false,
        "fri": false,
        "sat": false,
        "sun": false,
        "x": 1070,
        "y": 640,
        "wires": [
            [
                "edf8b357.e5e4"
            ]
        ]
    },
    {
        "id": "5d7c309e.4be8c",
        "type": "ui_text_input",
        "z": "f66f1d13.6d699",
        "name": "T2 On",
        "label": "",
        "tooltip": "",
        "group": "b662ff46.2c09c",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": false,
        "mode": "time",
        "delay": "0",
        "topic": "Ton",
        "x": 610,
        "y": 340,
        "wires": [
            [
                "7da4df41.d2c03"
            ]
        ]
    },
    {
        "id": "a121622d.17d49",
        "type": "ui_button",
        "z": "f66f1d13.6d699",
        "name": "Set ON",
        "group": "b662ff46.2c09c",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "{{msg.topic}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "buttonON",
        "x": 940,
        "y": 340,
        "wires": [
            [
                "b574e50.3de2c18"
            ]
        ]
    },
    {
        "id": "3e002585.7c123a",
        "type": "ui_text_input",
        "z": "f66f1d13.6d699",
        "name": "T2 Off",
        "label": "",
        "tooltip": "",
        "group": "b662ff46.2c09c",
        "order": 4,
        "width": "4",
        "height": "1",
        "passthru": false,
        "mode": "time",
        "delay": "0",
        "topic": "Toff",
        "x": 610,
        "y": 380,
        "wires": [
            [
                "7da4df41.d2c03"
            ]
        ]
    },
    {
        "id": "dab9f28b.573b8",
        "type": "ui_button",
        "z": "f66f1d13.6d699",
        "name": "Set OFF",
        "group": "b662ff46.2c09c",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "{{msg.topic}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "buttonOFF",
        "x": 940,
        "y": 460,
        "wires": [
            [
                "b574e50.3de2c18"
            ]
        ]
    },
    {
        "id": "7b571c7.11f3ce4",
        "type": "ui_button",
        "z": "f66f1d13.6d699",
        "name": "Reset Button",
        "group": "b662ff46.2c09c",
        "order": 6,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "4f50ca6b.336324"
            ]
        ]
    },
    {
        "id": "7da4df41.d2c03",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Set T2 On",
        "func": "var z = flow.get(\"Timer1\");\n\n//if timer on is set\nif(msg.topic === \"Ton\"){\n    flow.set(\"timer\"+z+\"_on\", msg.payload);\n    msg.color = \"red\";\n    msg.topic = \"Press\";\n    return [msg, null];\n    \n    \n}\n\n//if timer off is set\nif(msg.topic === \"Toff\"){\n    flow.set(\"timer\"+z+\"_off\", msg.payload);\n    msg.color = \"red\";\n    msg.topic = \"Press\";\n    return [null, msg];\n    \n}\n\n// reboot detected\nif(msg.topic === \"reboot\"){\n    msg.color = \"grey\";\n    msg.topic = \"Select Time\";\n    return [msg, msg];\n    \n}",
        "outputs": 2,
        "noerr": 0,
        "x": 770,
        "y": 380,
        "wires": [
            [
                "a121622d.17d49"
            ],
            [
                "dab9f28b.573b8"
            ]
        ]
    },
    {
        "id": "4f50ca6b.336324",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Reset",
        "func": "var z = flow.get(\"Timer1\");\n\nvar timerlabel = \"Timer \"+ z;\n\n\nflow.set(\"timer\"+z+\"_on\", 0);\nflow.set(\"timer\"+z+\"_off\", 0);\nflow.set(\"T\"+z+\"on\", null);\nflow.set(\"T\"+z+\"off\", null);\n\n\n\nvar msg1 = {payload: \"Timer\"+z+\" reset\", topic: timerlabel,};\nvar msg2 = {payload: 0};\n\nvar msg3 = {color: \"grey\",\n            topic: \"Select Time\",\n};\n\nvar msg4 = {payload:{suspended: true}};\nvar msg5 = {payload: true};\n\nreturn [msg1, msg2, msg3, msg4, msg5];",
        "outputs": 5,
        "noerr": 0,
        "x": 330,
        "y": 380,
        "wires": [
            [
                "5dafcdce.ad68b4"
            ],
            [
                "3e002585.7c123a",
                "5d7c309e.4be8c"
            ],
            [
                "a121622d.17d49",
                "dab9f28b.573b8"
            ],
            [
                "ea0173e6.c072d"
            ],
            [
                "4d80eeff.9c448",
                "5ac478b0.cdf638",
                "d766d380.6d362",
                "550d91b2.09eb3",
                "2570474f.111868",
                "65a66c2c.515f54",
                "6308a9cf.3de3d8"
            ]
        ]
    },
    {
        "id": "4d80eeff.9c448",
        "type": "ui_switch",
        "z": "f66f1d13.6d699",
        "name": "",
        "label": "Mon",
        "tooltip": "",
        "group": "b662ff46.2c09c",
        "order": 7,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 630,
        "y": 520,
        "wires": [
            [
                "aa6505d5.bbb878"
            ]
        ]
    },
    {
        "id": "5ac478b0.cdf638",
        "type": "ui_switch",
        "z": "f66f1d13.6d699",
        "name": "",
        "label": "Tue",
        "tooltip": "",
        "group": "b662ff46.2c09c",
        "order": 8,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "tue",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 630,
        "y": 560,
        "wires": [
            [
                "21656fde.2b5e6"
            ]
        ]
    },
    {
        "id": "d766d380.6d362",
        "type": "ui_switch",
        "z": "f66f1d13.6d699",
        "name": "",
        "label": "Wed",
        "tooltip": "",
        "group": "b662ff46.2c09c",
        "order": 9,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 630,
        "y": 600,
        "wires": [
            [
                "2f6a4d49.a55b42"
            ]
        ]
    },
    {
        "id": "550d91b2.09eb3",
        "type": "ui_switch",
        "z": "f66f1d13.6d699",
        "name": "",
        "label": "Thu",
        "tooltip": "",
        "group": "b662ff46.2c09c",
        "order": 10,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 630,
        "y": 640,
        "wires": [
            [
                "bc78c965.336128"
            ]
        ]
    },
    {
        "id": "2570474f.111868",
        "type": "ui_switch",
        "z": "f66f1d13.6d699",
        "name": "",
        "label": "Fri",
        "tooltip": "",
        "group": "b662ff46.2c09c",
        "order": 11,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 630,
        "y": 680,
        "wires": [
            [
                "92c73804.1923d8"
            ]
        ]
    },
    {
        "id": "65a66c2c.515f54",
        "type": "ui_switch",
        "z": "f66f1d13.6d699",
        "name": "",
        "label": "Sat",
        "tooltip": "",
        "group": "b662ff46.2c09c",
        "order": 12,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 630,
        "y": 720,
        "wires": [
            [
                "9a339f69.7ebf4"
            ]
        ]
    },
    {
        "id": "aa6505d5.bbb878",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Mon",
        "func": "var z = flow.get(\"Timer1\");\n\nif(z !== undefined){\n    var x = msg.payload;\n    flow.set(\"Monday\"+z, x);\n    msg.payload = {mon: x};\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 520,
        "wires": [
            [
                "ea0173e6.c072d"
            ]
        ]
    },
    {
        "id": "21656fde.2b5e6",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Tue",
        "func": "var z = flow.get(\"Timer1\");\n\n\nif(z !== undefined){\n    var x = msg.payload;\n    flow.set(\"Tuesday\"+z, x);\n    msg.payload = {tue: x};\n    \n    return msg;\n\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 560,
        "wires": [
            [
                "ea0173e6.c072d"
            ]
        ]
    },
    {
        "id": "2f6a4d49.a55b42",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Wed",
        "func": "var z = flow.get(\"Timer1\");\nif(z !== undefined){\n\n\nvar x = msg.payload;\nflow.set(\"Wednesday\"+z, x);\nmsg.payload = {wed: x};\n\nreturn msg;\n\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 600,
        "wires": [
            [
                "ea0173e6.c072d"
            ]
        ]
    },
    {
        "id": "bc78c965.336128",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Thu",
        "func": "var z = flow.get(\"Timer1\");\nif(z !== undefined){\nvar x = msg.payload;\nflow.set(\"Thursday\"+z, x);\nmsg.payload = {thu: x};\n\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 640,
        "wires": [
            [
                "ea0173e6.c072d"
            ]
        ]
    },
    {
        "id": "92c73804.1923d8",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Fri",
        "func": "var z = flow.get(\"Timer1\");\n\nif(z !== undefined){\nvar x = msg.payload;\nflow.set(\"Friday\"+z, x);\nmsg.payload = {fri: x};\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 680,
        "wires": [
            [
                "ea0173e6.c072d"
            ]
        ]
    },
    {
        "id": "9a339f69.7ebf4",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Sat",
        "func": "var z = flow.get(\"Timer1\");\nif(z !== undefined){\n\nvar x = msg.payload;\nflow.set(\"Saturday\"+z, x);\nmsg.payload = {sat: x};\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 720,
        "wires": [
            [
                "ea0173e6.c072d"
            ]
        ]
    },
    {
        "id": "d6e591bc.4b7f8",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Sun",
        "func": "var z = flow.get(\"Timer1\");\n\nif(z !== undefined){\nvar x = msg.payload;\nflow.set(\"Sunday\"+z, x);\nmsg.payload = {sun: x};\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 760,
        "wires": [
            [
                "ea0173e6.c072d"
            ]
        ]
    },
    {
        "id": "9f8033a7.0cb62",
        "type": "inject",
        "z": "f66f1d13.6d699",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "x": 520,
        "y": 820,
        "wires": [
            [
                "12c10ab8.365765"
            ]
        ]
    },
    {
        "id": "12c10ab8.365765",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Apply stored values ",
        "func": "var z = flow.get(\"Timer1\");\nvar pon = flow.get(\"Payload\"+z+\"_on\");\nvar poff = flow.get(\"Payload\"+z+\"_off\");\n\n\n// restore days\nvar mon = flow.get(\"Monday\"+z);\nvar tue = flow.get(\"Tuesday\"+z);\nvar wed = flow.get(\"Wednesday\"+z);\nvar thu = flow.get(\"Thursday\"+z);\nvar fri = flow.get(\"Friday\"+z);\nvar sat = flow.get(\"Saturday\"+z);\nvar sun = flow.get(\"Sunday\"+z);\n\n//restore timers\nvar timeON = flow.get(\"T\"+z+\"on\");\nvar timeOFF = flow.get(\"T\"+z+\"off\");\nvar timerlabel = \"Timer \"+ z;\n\n\nmsg.payload = { \"ontime\": \"ontime \" + timeON, \"onpayload\": pon,\n                \"offtime\": \"offtime \" + timeOFF, \"offpayload\": poff,\n                \"mon\": mon,\n                \"tue\": tue,\n                \"wed\": wed,\n                \"thu\": thu,\n                \"fri\": fri,\n                \"sat\": sat,\n                \"sun\": sun\n}\n\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 820,
        "wires": [
            [
                "ea0173e6.c072d"
            ]
        ]
    },
    {
        "id": "cb79a48c.a63cc8",
        "type": "comment",
        "z": "f66f1d13.6d699",
        "name": "Reboot Fix",
        "info": "",
        "x": 500,
        "y": 780,
        "wires": []
    },
    {
        "id": "cbf61424.d1b7c8",
        "type": "inject",
        "z": "f66f1d13.6d699",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "reboot",
        "payload": "Started!",
        "payloadType": "str",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "1d08e528.d4690b"
            ]
        ]
    },
    {
        "id": "715c08e4.361468",
        "type": "comment",
        "z": "f66f1d13.6d699",
        "name": "Set Button",
        "info": "",
        "x": 940,
        "y": 300,
        "wires": []
    },
    {
        "id": "5dafcdce.ad68b4",
        "type": "ui_toast",
        "z": "f66f1d13.6d699",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 650,
        "y": 300,
        "wires": []
    },
    {
        "id": "b574e50.3de2c18",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "On button press",
        "func": "var z = flow.get(\"Timer1\");\nvar pon = flow.get(\"Payload\"+z+\"_on\");\nvar poff = flow.get(\"Payload\"+z+\"_off\");\n\nfunction calcTime(hh){\n    var hours = (\"0\"+Math.floor((hh%86400)/3600)).slice(-2);\n    var minutes = (\"0\"+Math.floor((hh%3600)/60)).slice(-2);\n    return hours + \":\" + minutes;\n}\n\nvar time = null;\nvar timerlabel = \"Timer \"+ z;\n\n\n// when button on is pressed\nif(msg.topic === \"buttonON\"){\n    var t1  = flow.get(\"timer\"+z+\"_on\")/1000;\n    time = calcTime(t1);\n    flow.set(\"T\"+z+\"on\", time);\n    //send to text element\n    //var msg1 = {payload: \"SET\", topic: timerlabel, color: \"green\"};\n    //send to schedex\n    var msg1 = {payload: {ontime: \"ontime \" + time,\n                          onpayload: pon,\n                          suspended: false},\n                topic: \"SET\",\n                color:   \"green\"};\n    return [msg1,null];\n}\n// when button off is pressed\nif(msg.topic === \"buttonOFF\"){\n    var t2 = flow.get(\"timer\"+z+\"_off\")/1000;\n    time = calcTime(t2);\n    flow.set(\"T\"+z+\"off\", time);\n    //send to text element\n    //var msg3 = {payload: \"SET\", topic: timerlabel, color: \"green\"};\n    //send to schedex\n    var msg2 = {payload: {offtime: \"offtime \" + time,\n                          offpayload: poff,\n                          suspended: false},\n                topic: \"SET\",\n                color:   \"green\"};\n    return [null,msg2];\n    \n}\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "x": 1120,
        "y": 400,
        "wires": [
            [
                "ea0173e6.c072d",
                "a121622d.17d49"
            ],
            [
                "ea0173e6.c072d",
                "dab9f28b.573b8"
            ]
        ]
    },
    {
        "id": "6d13359f.11ec6c",
        "type": "inject",
        "z": "f66f1d13.6d699",
        "name": "Set after deployment",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "2519d7d3.728288"
            ]
        ]
    },
    {
        "id": "a1414a7d.a0ff18",
        "type": "debug",
        "z": "f66f1d13.6d699",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 350,
        "y": 260,
        "wires": []
    },
    {
        "id": "2519d7d3.728288",
        "type": "subflow:20f5b48f.283ffc",
        "z": "f66f1d13.6d699",
        "name": "Settings",
        "env": [
            {
                "name": "TimerNumber",
                "value": "1",
                "type": "num"
            },
            {
                "name": "PayloadON",
                "value": "true",
                "type": "bool"
            },
            {
                "name": "PayloadOFF",
                "value": "false",
                "type": "bool"
            }
        ],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "a1414a7d.a0ff18"
            ]
        ],
        "icon": "node-red/cog.svg"
    },
    {
        "id": "6308a9cf.3de3d8",
        "type": "ui_switch",
        "z": "f66f1d13.6d699",
        "name": "",
        "label": "Sun",
        "tooltip": "",
        "group": "b662ff46.2c09c",
        "order": 13,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 630,
        "y": 760,
        "wires": [
            [
                "d6e591bc.4b7f8"
            ]
        ]
    },
    {
        "id": "edf8b357.e5e4",
        "type": "debug",
        "z": "f66f1d13.6d699",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1290,
        "y": 640,
        "wires": []
    },
    {
        "id": "1d08e528.d4690b",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "Restore Dashboard",
        "func": "var z = flow.get(\"Timer1\");\n\nif(z !== undefined){\n    var mon = flow.get(\"Monday\"+z);\n    var tue = flow.get(\"Tuesday\"+z);\n    var wed = flow.get(\"Wednesday\"+z);\n    var thu = flow.get(\"Thursday\"+z);\n    var fri = flow.get(\"Friday\"+z);\n    var sat = flow.get(\"Saturday\"+z);\n    var sun = flow.get(\"Sunday\"+z);  \n\n    // update dashboard days\n    var msg5 = {payload: mon};\n    var msg6 = {payload: tue};\n    var msg7 = {payload: wed};\n    var msg8 = {payload: thu};\n    var msg9 = {payload: fri};\n    var msg10 = {payload: sat};\n    var msg11 = {payload: sun};\n    \n    \n    // update dashboard times\n    var timeON = flow.get(\"T\"+z+\"on\");\n    var timeOFF = flow.get(\"T\"+z+\"off\");\n    var msg1 = {payload: timeON};\n    var msg2 = {payload: timeOFF};\n    \n    \n    // update dash buttons\n    var msg3 = {payload: {color: \"green\"}, topic: \"SET\"};\n    var msg4 = {payload: {color: \"green\"}, topic: \"SET\"};\n    \n    \nreturn[msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10, msg11];    \n    \n}\n\n",
        "outputs": 11,
        "noerr": 0,
        "x": 370,
        "y": 540,
        "wires": [
            [
                "5d7c309e.4be8c"
            ],
            [
                "3e002585.7c123a"
            ],
            [
                "a121622d.17d49"
            ],
            [
                "dab9f28b.573b8"
            ],
            [
                "4d80eeff.9c448"
            ],
            [
                "5ac478b0.cdf638"
            ],
            [
                "d766d380.6d362"
            ],
            [
                "550d91b2.09eb3"
            ],
            [
                "2570474f.111868"
            ],
            [
                "65a66c2c.515f54"
            ],
            [
                "6308a9cf.3de3d8"
            ]
        ]
    },
    {
        "id": "18ebe7d1.1ea7c8",
        "type": "comment",
        "z": "f66f1d13.6d699",
        "name": "Timer in Dashboard",
        "info": "A neat online timer made in Dashboard.  You can link it with any automation setup in NodeRED, deploy multiple timers and add schedules to your devices. \nYou can customise the payload to suit your needs.\n![enter image description here](https://notenoughtech.com/wp-content/uploads/2019/11/YouTube-Thumb.jpg)\n\n**Instructions:**\nYou can read all [set up instructions here](https://notenoughtech.com/home-automation/nodered-home-automation/a-timer-in-nodered/)\n\n---\n\n**Features**:\n\n -   **Modular (as a subflow)**\n -   **Unlimited timers per device**\n -   **Supports “days of the week”**\n -   **works offline**\n -   **Dashboard interface**\n -   **One button reset**   \n\n**You will need the following nodes:**\n\n - node-red-dashboard\n - node-red-contrib-schedex\n---\n# Settings\n - **PayloadON** payload message sent on ON action\n - **PayloadOFF** payload message sent on OFF action\n - **TimerNumber** timer ID (unique for each timer)\n",
        "x": 130,
        "y": 260,
        "wires": []
    },
    {
        "id": "befb8618.f20408",
        "type": "ui_button",
        "z": "9a41cfce.1af98",
        "name": "IconRefresh",
        "group": "70fb931.dfc146c",
        "order": 1,
        "width": 2,
        "height": 2,
        "passthru": false,
        "label": "",
        "tooltip": "Refresh",
        "color": "",
        "bgcolor": "",
        "icon": "fa-refresh fa-4x",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 990,
        "y": 920,
        "wires": [
            [
                "8e05ba15.9a9d18"
            ]
        ]
    },
    {
        "id": "50df0b5c.a1ec24",
        "type": "ui_text",
        "z": "9a41cfce.1af98",
        "group": "70fb931.dfc146c",
        "order": 5,
        "width": 5,
        "height": 1,
        "name": "Description",
        "label": "",
        "format": "{{msg.payload.current.weather[0].description}}",
        "layout": "row-left",
        "x": 990,
        "y": 720,
        "wires": []
    },
    {
        "id": "f2f31039.bce1e",
        "type": "ui_text",
        "z": "9a41cfce.1af98",
        "group": "70fb931.dfc146c",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Wind",
        "label": "",
        "format": "{{msg.payload.current.wind_speed}}&nbsp;&nbsp;<i class=\"wi wi-darksky-wind\"></i>&nbsp;&nbsp;{{msg.payload.current.wind_cardinal}}",
        "layout": "col-center",
        "x": 970,
        "y": 800,
        "wires": []
    },
    {
        "id": "5f7de694.331f98",
        "type": "ui_text",
        "z": "9a41cfce.1af98",
        "group": "70fb931.dfc146c",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "SunriseTime",
        "label": "",
        "format": "<i class=\"wi wi-owm-01d\"></i>&nbsp;<i class=\"fa fa-arrow-up\"></i>&nbsp;&nbsp;{{msg.payload.current.sunrise}}",
        "layout": "row-center",
        "x": 990,
        "y": 840,
        "wires": []
    },
    {
        "id": "b374efdc.1d3f",
        "type": "ui_text",
        "z": "9a41cfce.1af98",
        "group": "70fb931.dfc146c",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "SunsetTime",
        "label": "",
        "format": "<i class=\"wi wi-wu-sunny\"></i>&nbsp;<i class=\"fa fa-arrow-down\"></i>&nbsp;&nbsp;{{msg.payload.current.sunset}}",
        "layout": "row-center",
        "x": 990,
        "y": 880,
        "wires": []
    },
    {
        "id": "3bdcedb0.6f48a2",
        "type": "comment",
        "z": "9a41cfce.1af98",
        "name": "OpenWeatherMap One Call API for Weather and Forecast",
        "info": "",
        "x": 270,
        "y": 660,
        "wires": []
    },
    {
        "id": "961db04.89d875",
        "type": "ui_template",
        "z": "9a41cfce.1af98",
        "group": "70fb931.dfc146c",
        "name": "Forecast2",
        "order": 7,
        "width": 10,
        "height": 2,
        "format": "<div style=\"height: 100%; justify-content: center; align-items: center;\">\n <div layout=\"rowicons\" layout-align=\"space-around start\" ng-repeat=\"data in msg.payload.rowicons\" style=\"font-size:150%;padding-top: 5px;padding-bottom: 5px\">\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell01}}\"></i></span>\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell02}}\"></i></span>\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell03}}\"></i></span>\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell04}}\"></i></span>\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell05}}\"></i></span>\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell06}}\"></i></span>\n  <span flex style=\"color: #097479;text-align: center\"><i class=\"wi wi-owm-{{data.cell07}}\"></i></span>\n  <span flex style=\"color: #097479;text-align: center\"><i class=\"wi wi-owm-{{data.cell08}}\"></i></span>\n  <span flex style=\"color: #097479;text-align: center\"><i class=\"wi wi-owm-{{data.cell09}}\"></i></span>\n  <span flex style=\"color: #097479;text-align: center\"><i class=\"wi wi-owm-{{data.cell10}}\"></i></span>\n </div>\n <div layout=\"rowtext\" layout-align=\"space-around start\" ng-repeat=\"data in msg.payload.rowtext\" style=\"line-height: 150%\">\n  <span flex style=\"color: white;text-align: center;\">{{data.cell01}}</span>\n  <span flex style=\"color: white;text-align: center\">{{data.cell02}}</span>\n  <span flex style=\"color: white;text-align: center\">{{data.cell03}}</span>\n  <span flex style=\"color: white;text-align: center\">{{data.cell04}}</span>\n  <span flex style=\"color: white;text-align: center\">{{data.cell05}}</span>\n  <span flex style=\"color: white;text-align: center\">{{data.cell06}}</span>\n  <span flex style=\"color: #097479;text-align: center\">{{data.cell07}}</span>\n  <span flex style=\"color: #097479;text-align: center\">{{data.cell08}}</span>\n  <span flex style=\"color: #097479;text-align: center\">{{data.cell09}}</span>\n  <span flex style=\"color: #097479;text-align: center\">{{data.cell10}}</span>\n </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 980,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "95566750.413b08",
        "type": "function",
        "z": "9a41cfce.1af98",
        "name": "Format forecast data",
        "func": "var fcdata = {};\nvar units=flow.get('units');\nif (units===undefined)\n{\n  units=\"imperial\";\n}\n\nfunction formatTemp(high, low){\n    if (units == \"imperial\") {\n        if (low){\n          temp = parseFloat(high).toFixed() + '/' + parseFloat(low).toFixed()\n        }\n        else {\n          temp = parseFloat(high).toFixed() + '°F'\n        }\n    }\n    else { // metric\n//        temp = parseFloat(temp).toFixed(1) + '°C'\n        if (low){\n          temp = parseFloat(high).toFixed() + '/' + parseFloat(low).toFixed()\n        }\n        else {\n          temp = parseFloat(high).toFixed() + '°C'\n        }\n    }\n    return temp;\n}\nfunction dayName(unixTime){\n    var d = new Date(unixTime * 1000);\n    var weekday = new Array(7);\n        weekday[0] = \"Sun\";\n        weekday[1] = \"Mon\";\n        weekday[2] = \"Tue\";\n        weekday[3] = \"Wed\";\n        weekday[4] = \"Thu\";\n        weekday[5] = \"Fri\";\n        weekday[6] = \"Sat\";\n\n    return weekday[d.getDay()]\n}\nfunction timeConvert(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp * 1000);\n  var hour = a.getHours();\n  var suffix = \" am\";\n  if (hour >= 12) {\n    hour = hour - 12;\n    suffix = \" pm\";\n  }\n  if (hour === 0) {\n    hour = 12;\n  }\n  var min = a.getMinutes();\n  if (min < 10) {min = \"0\" + min;}\n//  return hour + ':' + min + suffix;\n  return hour + suffix;\n}\n// prepare forecast data for CSS based ui widget\n\nfcdata.payload = {\n  rowtext: {\n  \tdata01: {\n      cell01: timeConvert(msg.payload.hourly[1].dt),\n      cell02: timeConvert(msg.payload.hourly[2].dt),\n      cell03: timeConvert(msg.payload.hourly[3].dt),\n      cell04: timeConvert(msg.payload.hourly[4].dt),\n      cell05: timeConvert(msg.payload.hourly[5].dt),\n      cell06: timeConvert(msg.payload.hourly[6].dt),\n      cell07: dayName(msg.payload.daily[1].dt),\n      cell08: dayName(msg.payload.daily[2].dt),\n      cell09: dayName(msg.payload.daily[3].dt),\n      cell10: dayName(msg.payload.daily[4].dt),\n  \t},\n  \tdata02: {\n       cell01: formatTemp(msg.payload.hourly[1].temp),\n       cell02: formatTemp(msg.payload.hourly[2].temp),\n       cell03: formatTemp(msg.payload.hourly[3].temp),\n       cell04: formatTemp(msg.payload.hourly[4].temp),\n       cell05: formatTemp(msg.payload.hourly[5].temp),\n       cell06: formatTemp(msg.payload.hourly[6].temp),\n       cell07: formatTemp(msg.payload.daily[1].temp.max, msg.payload.daily[0].temp.min),\n       cell08: formatTemp(msg.payload.daily[2].temp.max, msg.payload.daily[1].temp.min),\n       cell09: formatTemp(msg.payload.daily[3].temp.max, msg.payload.daily[2].temp.min),\n       cell10: formatTemp(msg.payload.daily[4].temp.max, msg.payload.daily[3].temp.min),\n  \t}\n  },\n  rowicons: {\n  \tdata01: {\n  \t\tcell01: msg.payload.hourly[1].weather[0].icon,\n  \t\tcell02: msg.payload.hourly[2].weather[0].icon,\n  \t\tcell03: msg.payload.hourly[3].weather[0].icon,\n  \t\tcell04: msg.payload.hourly[4].weather[0].icon,\n  \t\tcell05: msg.payload.hourly[5].weather[0].icon,\n  \t\tcell06: msg.payload.hourly[6].weather[0].icon,\n  \t\tcell07: msg.payload.daily[1].weather[0].icon,\n  \t\tcell08: msg.payload.daily[2].weather[0].icon,\n  \t\tcell09: msg.payload.daily[3].weather[0].icon,\n  \t\tcell10: msg.payload.daily[4].weather[0].icon,\n  \t}\n  }\n}\n\nreturn fcdata;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 680,
        "wires": [
            [
                "961db04.89d875"
            ]
        ]
    },
    {
        "id": "4591b7b4.06f9c8",
        "type": "ui_text",
        "z": "9a41cfce.1af98",
        "group": "70fb931.dfc146c",
        "order": 2,
        "width": 2,
        "height": 1,
        "name": "Temperature",
        "label": "",
        "format": "<p style=\"font-size: 200%\">{{msg.payload.current.temp}}</p>",
        "layout": "row-left",
        "x": 990,
        "y": 760,
        "wires": []
    },
    {
        "id": "97e6208e.ab49e",
        "type": "http request",
        "z": "9a41cfce.1af98",
        "name": "Get OWM data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": true,
        "url": "https://api.openweathermap.org/data/2.5/onecall",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 580,
        "y": 720,
        "wires": [
            [
                "f97e4848.9954a8",
                "95566750.413b08"
            ]
        ]
    },
    {
        "id": "4ad16f32.0250b",
        "type": "inject",
        "z": "9a41cfce.1af98",
        "name": "Trigger",
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 120,
        "y": 720,
        "wires": [
            [
                "4ea2abfa.cd0824"
            ]
        ]
    },
    {
        "id": "f97e4848.9954a8",
        "type": "function",
        "z": "9a41cfce.1af98",
        "name": "Format current data",
        "func": "var icon = {};\n\nvar units=flow.get('units');\nif (units===undefined)\n{\n  units=\"imperial\";\n}\n\nfunction timeConvert(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp * 1000);\n  var hour = a.getHours();\n  var suffix = \" am\";\n  if (hour >= 12) {\n    hour = hour - 12;\n    suffix = \" pm\";\n  }\n  if (hour === 0) {\n    hour = 12;\n  }\n  var min = a.getMinutes();\n  if (min < 10) {min = \"0\" + min;}\n  return hour + ':' + min + suffix;\n}\n\nvar degreesToCardinal = function(deg){\nif (deg>11.25 && deg<=33.75){\nreturn \"NNE\";\n  }else if (deg>33.75 && deg<56.25){\nreturn \"NE\";\n  }else if (deg>56.25 && deg<78.75){\nreturn \"ENE\";\n  }else if (deg>78.75 && deg<101.25){\nreturn \"E\";\n  }else if (deg>101.25 && deg<123.75){\nreturn \"ESE\";\n  }else if (deg>123.75 && deg<146.25){\nreturn \"SE\";\n  }else if (deg>146.25 && deg<168.75){\nreturn \"SSE\";\n  }else if (deg>168.75 && deg<191.25){\nreturn \"S\";\n  }else if (deg>191.25 && deg<213.75){\nreturn \"SSW\";\n  }else if (deg>213.75 && deg<236.25){\nreturn \"SW\";\n  }else if (deg>236.25 && deg<258.75){\nreturn \"WSW\";\n  }else if (deg>258.75 && deg<281.25){\nreturn \"W\";\n  }else if (deg>281.25 && deg<303.75){\nreturn \"WNW\";\n  }else if (deg>303.75 && deg<326.25){\nreturn \"NW\";\n  }else if (deg>326.25 && deg<348.75){\nreturn \"NNW\";\n  }else{\nreturn \"N\"; \n  }\n}\n\nif (units == \"imperial\")\n{\n  msg.payload.current.temp = msg.payload.current.temp.toFixed() + ' °F';\n  msg.payload.current.wind_speed = msg.payload.current.wind_speed.toFixed() + ' mph';\n}\nelse // metric units\n{\n  msg.payload.current.temp = msg.payload.current.temp.toFixed(1) + ' °C';\n  msg.payload.current.wind_speed = msg.payload.current.wind_speed.toFixed(1) + ' m/s';\n}\n\nmsg.payload.current.wind_cardinal = degreesToCardinal(msg.payload.current.wind_deg);\nmsg.payload.current.sunrise = timeConvert(msg.payload.current.sunrise);\nmsg.payload.current.sunset = timeConvert(msg.payload.current.sunset);\n\nvar iconString = 'wi-owm-' + msg.payload.current.weather[0].icon + ' wi-4x';\nicon = {\n    ui_control: {\n        icon: iconString\n    }\n}; \n\nreturn [msg, icon];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 720,
        "wires": [
            [
                "4591b7b4.06f9c8",
                "f2f31039.bce1e",
                "50df0b5c.a1ec24",
                "5f7de694.331f98",
                "b374efdc.1d3f"
            ],
            [
                "befb8618.f20408"
            ]
        ]
    },
    {
        "id": "4ea2abfa.cd0824",
        "type": "change",
        "z": "9a41cfce.1af98",
        "name": "Set location, appid, units",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.lat",
                "pt": "msg",
                "to": "-26.2041",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "28.0473",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.appid",
                "pt": "msg",
                "to": "0c3334f32a557300aab0a6bf8c5dbe25",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.units",
                "pt": "msg",
                "to": "metric",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "units",
                "pt": "flow",
                "to": "payload.units",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 720,
        "wires": [
            [
                "97e6208e.ab49e"
            ]
        ]
    },
    {
        "id": "ca3302fc.15426",
        "type": "ui_ui_control",
        "z": "9a41cfce.1af98",
        "name": "Update tab",
        "events": "all",
        "x": 110,
        "y": 820,
        "wires": [
            [
                "8d9656.2007a9a8"
            ]
        ]
    },
    {
        "id": "8e05ba15.9a9d18",
        "type": "link out",
        "z": "9a41cfce.1af98",
        "name": "Refresh",
        "links": [
            "a41873c0.b9b9b"
        ],
        "x": 1095,
        "y": 920,
        "wires": []
    },
    {
        "id": "a41873c0.b9b9b",
        "type": "link in",
        "z": "9a41cfce.1af98",
        "name": "",
        "links": [
            "8e05ba15.9a9d18"
        ],
        "x": 155,
        "y": 760,
        "wires": [
            [
                "4ea2abfa.cd0824"
            ]
        ]
    },
    {
        "id": "8d9656.2007a9a8",
        "type": "switch",
        "z": "9a41cfce.1af98",
        "name": "tab focus",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 820,
        "wires": [
            [
                "4ea2abfa.cd0824"
            ]
        ]
    },
    {
        "id": "5a2c134e.6e17fc",
        "type": "switch",
        "z": "ff42fe15.c67d18",
        "name": "Topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "get",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "put",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "clear",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "dump",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 270,
        "y": 120,
        "wires": [
            [
                "27329d87.2ea272"
            ],
            [
                "1e88264c.c3eb42"
            ],
            [
                "7c299ea0.b625c8"
            ],
            [
                "eb8ef779.5af3c8"
            ],
            [
                "eb8ef779.5af3c8"
            ]
        ]
    },
    {
        "id": "1e88264c.c3eb42",
        "type": "function",
        "z": "ff42fe15.c67d18",
        "name": "put",
        "func": "var queue = flow.get(\"queue\")\n\n\nif (!Array.isArray(queue)){\n    queue = [];\n}else if ( queue.length >= env.get(\"Buffer_Size\") ){\n    queue.pop(1);\n}\n\nqueue.unshift(msg.payload);\n\nflow.set(\"queue\", queue);\nmsg.payload = queue;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 100,
        "wires": [
            [
                "80547902.274c88"
            ]
        ]
    },
    {
        "id": "27329d87.2ea272",
        "type": "function",
        "z": "ff42fe15.c67d18",
        "name": "get",
        "func": "var queue = flow.get(\"queue\")\nvar item;\n\nif (!Array.isArray(queue)){\n    queue = [];\n}else{\n    item = queue.pop(1);\n}\n\n\nflow.set(\"queue\", queue)\nmsg.payload = item;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "eb8ef779.5af3c8",
        "type": "change",
        "z": "ff42fe15.c67d18",
        "name": "dump",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "queue",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 180,
        "wires": [
            [
                "80547902.274c88"
            ]
        ]
    },
    {
        "id": "80547902.274c88",
        "type": "change",
        "z": "ff42fe15.c67d18",
        "name": "Count",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$count(msg.payload)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7c299ea0.b625c8",
        "type": "change",
        "z": "ff42fe15.c67d18",
        "name": "clear",
        "rules": [
            {
                "t": "set",
                "p": "queue",
                "pt": "flow",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "8e4f0460.903db8"
            ]
        ]
    },
    {
        "id": "8e4f0460.903db8",
        "type": "change",
        "z": "ff42fe15.c67d18",
        "name": "Zero",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "69e8e0c6.47986",
        "type": "exec",
        "z": "ce755ade.782f08",
        "command": "cd C:\\Users\\Kemp\\.node-red && npm list --depth=0 --prod=true",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "node-red modules",
        "x": 470,
        "y": 60,
        "wires": [
            [
                "f2b4e8d0.a98158"
            ],
            [],
            []
        ]
    },
    {
        "id": "80b6040d.4be9f8",
        "type": "exec",
        "z": "ce755ade.782f08",
        "command": "node -v",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "node version",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "f2b4e8d0.a98158"
            ],
            [],
            []
        ]
    },
    {
        "id": "1b0351e5.a07fee",
        "type": "exec",
        "z": "ce755ade.782f08",
        "command": "npm -v",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "npm version",
        "x": 450,
        "y": 180,
        "wires": [
            [
                "f2b4e8d0.a98158"
            ],
            [],
            []
        ]
    },
    {
        "id": "caf0aea2.c07c7",
        "type": "exec",
        "z": "ce755ade.782f08",
        "command": "npm list node-red -g",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "node-red",
        "x": 440,
        "y": 120,
        "wires": [
            [
                "f2b4e8d0.a98158"
            ],
            [],
            []
        ]
    },
    {
        "id": "cf91163c.f57248",
        "type": "exec",
        "z": "ce755ade.782f08",
        "command": "systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\"",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "OS",
        "x": 430,
        "y": 300,
        "wires": [
            [
                "f2b4e8d0.a98158"
            ],
            [],
            []
        ]
    },
    {
        "id": "556ba8a0.beb9c8",
        "type": "inject",
        "z": "ce755ade.782f08",
        "name": "Windows 10",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "42192fcc.4a5fa",
                "efab8abe.1c8038",
                "ea0e4e8f.8f6be",
                "def291b6.cfbc4",
                "cf91163c.f57248"
            ]
        ]
    },
    {
        "id": "f2b4e8d0.a98158",
        "type": "debug",
        "z": "ce755ade.782f08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 300,
        "wires": []
    },
    {
        "id": "42192fcc.4a5fa",
        "type": "delay",
        "z": "ce755ade.782f08",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 300,
        "y": 180,
        "wires": [
            [
                "1b0351e5.a07fee"
            ]
        ]
    },
    {
        "id": "efab8abe.1c8038",
        "type": "delay",
        "z": "ce755ade.782f08",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 300,
        "y": 60,
        "wires": [
            [
                "69e8e0c6.47986"
            ]
        ]
    },
    {
        "id": "ea0e4e8f.8f6be",
        "type": "delay",
        "z": "ce755ade.782f08",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 300,
        "y": 120,
        "wires": [
            [
                "caf0aea2.c07c7"
            ]
        ]
    },
    {
        "id": "def291b6.cfbc4",
        "type": "delay",
        "z": "ce755ade.782f08",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 300,
        "y": 240,
        "wires": [
            [
                "80b6040d.4be9f8"
            ]
        ]
    },
    {
        "id": "fe7e607d.0721c",
        "type": "ui_text_input",
        "z": "f66f1d13.6d699",
        "name": "weekday (on)",
        "label": "aan",
        "tooltip": "",
        "group": "7475a065.6e5cf8",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "ontime",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "960dbfb3.7ef61"
            ]
        ]
    },
    {
        "id": "9ed22420.d3c1b",
        "type": "ui_text_input",
        "z": "f66f1d13.6d699",
        "name": "weekday (off)",
        "label": "uit",
        "tooltip": "",
        "group": "7475a065.6e5cf8",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "offtime",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "960dbfb3.7ef61"
            ]
        ]
    },
    {
        "id": "e67143dd.138ba8",
        "type": "ui_text",
        "z": "f66f1d13.6d699",
        "group": "7475a065.6e5cf8",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "weekday",
        "label": "",
        "format": "{{msg.payload.name}}",
        "layout": "row-left",
        "x": 480,
        "y": 1120,
        "wires": []
    },
    {
        "id": "4ccad8c1.25ccc",
        "type": "schedex",
        "z": "f66f1d13.6d699",
        "name": "weekday",
        "passthroughunhandled": false,
        "suspended": false,
        "lat": "52.1",
        "lon": "5.1",
        "ontime": "07:00",
        "ontopic": "server/cmnd/paddenstoel/POWER",
        "onpayload": "on",
        "onoffset": 0,
        "onrandomoffset": 0,
        "offtime": "08:00",
        "offtopic": "server/cmnd/paddenstoel/POWER",
        "offpayload": "off",
        "offoffset": 0,
        "offrandomoffset": 0,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": false,
        "sun": false,
        "x": 850,
        "y": 1080,
        "wires": [
            [
                "6c43860a.203fc",
                "a65bcdd5.9278"
            ]
        ]
    },
    {
        "id": "960dbfb3.7ef61",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "on/off + info",
        "func": "// input milliseconds since 00:00 in milliseconds\n// convert the milliseconds timestamp to hours:minutes\n\n// prefix numbers with 0\nNumber.prototype.pad = function(size) {\n    var s = String(this);\n    while (s.length < (size || 2)) {s = \"0\" + s;}\n    return s;\n}\n\nlet millisecondsSinceMidnight = msg.payload;\nlet secondsSinceMidnight =  Math.floor(millisecondsSinceMidnight/1000)\nlet minutesSinceMidnight =  Math.floor(millisecondsSinceMidnight/1000/60)\nlet hoursSinceMidnight =    Math.floor(millisecondsSinceMidnight/1000/60/60)\nlet hhString = hoursSinceMidnight.pad();\nlet mmString = Math.floor(minutesSinceMidnight%60).pad();\n// format timestamp\nlet timeStamp = hhString + \":\" + mmString\n\n// set msg\nif(msg.topic == \"ontime\"){\n    msg.payload = {\n        \"ontime\" : timeStamp\n    }\n}else if(msg.topic == \"offtime\"){\n    msg.payload = {\n        \"offtime\" : timeStamp\n    }\n}\n\n// set other message for getting info on Schedex\nmsgInfo={payload:\"info\", delay:100}; \n\nreturn [[msg,msgInfo]];",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 1180,
        "wires": [
            [
                "4ccad8c1.25ccc"
            ]
        ]
    },
    {
        "id": "6c43860a.203fc",
        "type": "mqtt out",
        "z": "f66f1d13.6d699",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "171132c7.ece67d",
        "x": 1130,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e5becc73.80ce6",
        "type": "inject",
        "z": "f66f1d13.6d699",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "info",
        "payloadType": "str",
        "x": 850,
        "y": 1040,
        "wires": [
            [
                "4ccad8c1.25ccc"
            ]
        ]
    },
    {
        "id": "a65bcdd5.9278",
        "type": "link out",
        "z": "f66f1d13.6d699",
        "name": "Paddenstoek weekdayschema (schedex)",
        "links": [
            "9829062d.6fc64"
        ],
        "x": 1095,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9829062d.6fc64",
        "type": "link in",
        "z": "f66f1d13.6d699",
        "name": "",
        "links": [
            "a65bcdd5.9278"
        ],
        "x": 95,
        "y": 1120,
        "wires": [
            [
                "e67143dd.138ba8",
                "10fe9d9f.a3f452",
                "cc68aebf.c083d8"
            ]
        ]
    },
    {
        "id": "539c4b33.a80944",
        "type": "ui_switch",
        "z": "f66f1d13.6d699",
        "name": "weekday",
        "label": "",
        "tooltip": "",
        "group": "7475a065.6e5cf8",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "{\"suspended\":false}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"suspended\":true}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "x": 480,
        "y": 1080,
        "wires": [
            [
                "4ccad8c1.25ccc"
            ]
        ]
    },
    {
        "id": "10fe9d9f.a3f452",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "prep switch",
        "func": "// prep switch\nmsg.payload = { \"suspended\":msg.payload.suspended};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "539c4b33.a80944"
            ]
        ]
    },
    {
        "id": "8a175883.f32298",
        "type": "ui_text_input",
        "z": "f66f1d13.6d699",
        "name": "weekend (on)",
        "label": "aan",
        "tooltip": "",
        "group": "7475a065.6e5cf8",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "ontime",
        "x": 500,
        "y": 1360,
        "wires": [
            [
                "526b913b.604c3"
            ]
        ]
    },
    {
        "id": "763e22db.e06ea4",
        "type": "ui_text_input",
        "z": "f66f1d13.6d699",
        "name": "weekend (off)",
        "label": "uit",
        "tooltip": "",
        "group": "7475a065.6e5cf8",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "offtime",
        "x": 500,
        "y": 1400,
        "wires": [
            [
                "526b913b.604c3"
            ]
        ]
    },
    {
        "id": "2e51c34f.dadfe4",
        "type": "ui_text",
        "z": "f66f1d13.6d699",
        "group": "7475a065.6e5cf8",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "weekend",
        "label": "",
        "format": "{{msg.payload.name}}",
        "layout": "row-left",
        "x": 480,
        "y": 1320,
        "wires": []
    },
    {
        "id": "cf25e4ed.18f62",
        "type": "schedex",
        "z": "f66f1d13.6d699",
        "name": "weekend",
        "passthroughunhandled": false,
        "suspended": false,
        "lat": "52.1",
        "lon": "5.1",
        "ontime": "07:35",
        "ontopic": "server/cmnd/paddenstoel/POWER",
        "onpayload": "on",
        "onoffset": 0,
        "onrandomoffset": 0,
        "offtime": "08:35",
        "offtopic": "server/cmnd/paddenstoel/POWER",
        "offpayload": "off",
        "offoffset": 0,
        "offrandomoffset": 0,
        "mon": false,
        "tue": false,
        "wed": false,
        "thu": false,
        "fri": false,
        "sat": true,
        "sun": true,
        "x": 860,
        "y": 1280,
        "wires": [
            [
                "8135ebe2.b97568",
                "627e5766.bc30f8"
            ]
        ]
    },
    {
        "id": "526b913b.604c3",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "on/off + info",
        "func": "// input milliseconds since 00:00 in milliseconds\n// convert the milliseconds timestamp to hours:minutes\n\n// prefix numbers with 0\nNumber.prototype.pad = function(size) {\n    var s = String(this);\n    while (s.length < (size || 2)) {s = \"0\" + s;}\n    return s;\n}\n\nlet millisecondsSinceMidnight = msg.payload;\nlet secondsSinceMidnight =  Math.floor(millisecondsSinceMidnight/1000)\nlet minutesSinceMidnight =  Math.floor(millisecondsSinceMidnight/1000/60)\nlet hoursSinceMidnight =    Math.floor(millisecondsSinceMidnight/1000/60/60)\nlet hhString = hoursSinceMidnight.pad();\nlet mmString = Math.floor(minutesSinceMidnight%60).pad();\n// format timestamp\nlet timeStamp = hhString + \":\" + mmString\n\n// set msg\nif(msg.topic == \"ontime\"){\n    msg.payload = {\n        \"ontime\" : timeStamp\n    }\n}else if(msg.topic == \"offtime\"){\n    msg.payload = {\n        \"offtime\" : timeStamp\n    }\n}\n\n// set other message for getting info on Schedex\nmsgInfo={payload:\"info\", delay:100}; \n\nreturn [[msg,msgInfo]];",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 1380,
        "wires": [
            [
                "cf25e4ed.18f62"
            ]
        ]
    },
    {
        "id": "8135ebe2.b97568",
        "type": "mqtt out",
        "z": "f66f1d13.6d699",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "171132c7.ece67d",
        "x": 1130,
        "y": 1280,
        "wires": []
    },
    {
        "id": "9060a3de.d2549",
        "type": "inject",
        "z": "f66f1d13.6d699",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "info",
        "payloadType": "str",
        "x": 850,
        "y": 1240,
        "wires": [
            [
                "cf25e4ed.18f62"
            ]
        ]
    },
    {
        "id": "627e5766.bc30f8",
        "type": "link out",
        "z": "f66f1d13.6d699",
        "name": "Paddenstoek weekdayschema (schedex)",
        "links": [
            "c3a834f8.18e27"
        ],
        "x": 1095,
        "y": 1240,
        "wires": []
    },
    {
        "id": "c3a834f8.18e27",
        "type": "link in",
        "z": "f66f1d13.6d699",
        "name": "",
        "links": [
            "627e5766.bc30f8"
        ],
        "x": 95,
        "y": 1320,
        "wires": [
            [
                "2e51c34f.dadfe4",
                "6bf2d35f.fd8dfc",
                "2954bd3e.614dba"
            ]
        ]
    },
    {
        "id": "a81526a1.17e21",
        "type": "ui_switch",
        "z": "f66f1d13.6d699",
        "name": "weekend",
        "label": "",
        "tooltip": "",
        "group": "7475a065.6e5cf8",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "{\"suspended\":false}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"suspended\":true}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "cf25e4ed.18f62"
            ]
        ]
    },
    {
        "id": "6bf2d35f.fd8dfc",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "prep switch",
        "func": "// prep switch\nmsg.payload = { \"suspended\":msg.payload.suspended};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 1280,
        "wires": [
            [
                "a81526a1.17e21"
            ]
        ]
    },
    {
        "id": "d7e46070.799bf",
        "type": "ui_template",
        "z": "f66f1d13.6d699",
        "group": "7475a065.6e5cf8",
        "name": "refresh",
        "order": 9,
        "width": 2,
        "height": 1,
        "format": "<md-button class=\"button save\" onClick=\"window.location.reload();\">refresh ⟳</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 480,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "2954bd3e.614dba",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "hh:mm -> ms",
        "func": "// get timestamps in ms\nlet hhmmOntime = msg.payload.ontime;\nlet hhmmOfftime = msg.payload.offtime;\n\n// get hh and mm\nlet timesplitOntime = hhmmOntime.split(':');\nlet hhOntime = parseInt(timesplitOntime[0]);\nlet mmOntime = parseInt(timesplitOntime[1]);\n\nlet timesplitOfftime = hhmmOfftime.split(':');\nlet hhOfftime = parseInt(timesplitOfftime[0]);\nlet mmOfftime = parseInt(timesplitOfftime[1]);\n\n// convert hh and mm to ms and put it in the payload\nvar msgOntime =  {\"payload\": (hhOntime*60*60*1000)+(mmOntime*60*1000)};\nvar msgOfftime = {\"payload\": (hhOfftime*60*60*1000)+(mmOfftime*60*1000)};\n\n// return both values\nreturn [msgOntime, msgOfftime];",
        "outputs": 2,
        "noerr": 0,
        "x": 250,
        "y": 1380,
        "wires": [
            [
                "8a175883.f32298"
            ],
            [
                "763e22db.e06ea4"
            ]
        ]
    },
    {
        "id": "cc68aebf.c083d8",
        "type": "function",
        "z": "f66f1d13.6d699",
        "name": "hh:mm -> ms",
        "func": "// get timestamps in ms\nlet hhmmOntime = msg.payload.ontime;\nlet hhmmOfftime = msg.payload.offtime;\n\n// get hh and mm\nlet timesplitOntime = hhmmOntime.split(':');\nlet hhOntime = parseInt(timesplitOntime[0]);\nlet mmOntime = parseInt(timesplitOntime[1]);\n\nlet timesplitOfftime = hhmmOfftime.split(':');\nlet hhOfftime = parseInt(timesplitOfftime[0]);\nlet mmOfftime = parseInt(timesplitOfftime[1]);\n\n// convert hh and mm to ms and put it in the payload\nvar msgOntime =  {\"payload\": (hhOntime*60*60*1000)+(mmOntime*60*1000)};\nvar msgOfftime = {\"payload\": (hhOfftime*60*60*1000)+(mmOfftime*60*1000)};\n\n// return both values\nreturn [msgOntime, msgOfftime];",
        "outputs": 2,
        "noerr": 0,
        "x": 250,
        "y": 1180,
        "wires": [
            [
                "fe7e607d.0721c"
            ],
            [
                "9ed22420.d3c1b"
            ]
        ]
    },
    {
        "id": "ff1c1b18.43f098",
        "type": "comment",
        "z": "f66f1d13.6d699",
        "name": "Set schedex using dashboard ui",
        "info": "This flow can sets the schedex module using the dashboard ui. This was much harder than I should be.\n\nI use this flow to turn 'on' the 'Paddenstoel' (kids light) during the weekdays at 07:00 and in the weekends at 07:30.\n\nSometimes the values of the imput fields are empty on load. Because I do not quite get the way how the dashboard handles new values I made a 'refresh' button on my interface which works.\n\nI use javascript to convert between time formats.\n\nThe device in this example is called Paddenstoel (which is Dutch for mushroom). Personally I use a text editor to rename the device in the JSON file to give it a new name. I guess using an inject node could also work.",
        "x": 220,
        "y": 980,
        "wires": []
    },
    {
        "id": "a967c088.36e93",
        "type": "mosca in",
        "z": "ce755ade.782f08",
        "mqtt_port": 1883,
        "mqtt_ws_port": 8080,
        "name": "",
        "username": "",
        "password": "",
        "dburl": "",
        "x": 110,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "5f84de58.aa4bb",
        "type": "exec",
        "z": "6292787f.d2f758",
        "command": "vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "RPi Temp.",
        "x": 430,
        "y": 80,
        "wires": [
            [
                "d7018347.6aae6"
            ],
            [],
            []
        ]
    },
    {
        "id": "2b25b0b8.3ca42",
        "type": "inject",
        "z": "6292787f.d2f758",
        "name": "",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "5f84de58.aa4bb",
                "b0595154.a54c9",
                "b731d415.ccff98"
            ]
        ]
    },
    {
        "id": "d7018347.6aae6",
        "type": "function",
        "z": "6292787f.d2f758",
        "name": "",
        "func": "str = msg.payload\nmsg.payload = str.substring(5,9);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b0595154.a54c9",
        "type": "exec",
        "z": "6292787f.d2f758",
        "command": "top -d 0.5 -b -n2 | grep \"Cpu(s)\"|tail -n 1 | awk '{print $2 + $4}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "CPU Load",
        "x": 430,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b731d415.ccff98",
        "type": "exec",
        "z": "6292787f.d2f758",
        "command": "free | grep Mem | awk '{print 100*$3/$2}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Free Memory",
        "x": 430,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2aa1f18.fccda0e",
        "type": "exec",
        "z": "6292787f.d2f758",
        "command": "df -h",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Disk Usage",
        "x": 430,
        "y": 260,
        "wires": [
            [
                "fb7d998c.c1a528"
            ],
            [],
            []
        ]
    },
    {
        "id": "fb7d998c.c1a528",
        "type": "function",
        "z": "6292787f.d2f758",
        "name": "",
        "func": "var re = /([0-9]{2})%/\nvar idx = msg.payload.search(re);\nvar str = msg.payload;\nif (idx >=0) {\n    str = msg.payload.substring(idx, idx + 2);\n}\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "5c300b32.2dc324",
        "type": "inject",
        "z": "6292787f.d2f758",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "2aa1f18.fccda0e"
            ]
        ]
    },
    {
        "id": "91f07b75.bfac28",
        "type": "inject",
        "z": "6292787f.d2f758",
        "name": "",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "5547a768.68c208"
            ]
        ]
    },
    {
        "id": "5547a768.68c208",
        "type": "exec",
        "z": "6292787f.d2f758",
        "command": "hostname",
        "addpay": false,
        "append": "-I",
        "useSpawn": "",
        "timer": "",
        "name": "Get Local IP",
        "x": 430,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "265192c1.e0226e",
        "type": "trigger",
        "z": "ad85cd.dcf08a3",
        "name": "",
        "op1": "on",
        "op2": "off",
        "op1type": "str",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "outputs": 1,
        "x": 910,
        "y": 160,
        "wires": [
            [
                "6865d93.1256a28"
            ]
        ]
    },
    {
        "id": "6865d93.1256a28",
        "type": "delay",
        "z": "ad85cd.dcf08a3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 920,
        "y": 200,
        "wires": [
            [
                "d7bce5c.4aa6f18"
            ]
        ]
    },
    {
        "id": "d7bce5c.4aa6f18",
        "type": "change",
        "z": "ad85cd.dcf08a3",
        "name": "off/on",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 160,
        "wires": [
            [
                "9d975d2d.37fed"
            ]
        ]
    },
    {
        "id": "9d975d2d.37fed",
        "type": "switch",
        "z": "ad85cd.dcf08a3",
        "name": "on/off",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 160,
        "wires": [
            [
                "265192c1.e0226e"
            ],
            []
        ]
    },
    {
        "id": "3cd96359.2e978c",
        "type": "trigger",
        "z": "ad85cd.dcf08a3",
        "name": "",
        "op1": "on",
        "op2": "off",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "min",
        "reset": "reset",
        "bytopic": "all",
        "outputs": 1,
        "x": 570,
        "y": 120,
        "wires": [
            [
                "975f3c13.db982",
                "2f92b679.bbdb8a",
                "265192c1.e0226e"
            ]
        ]
    },
    {
        "id": "c2d9f840.72ff68",
        "type": "change",
        "z": "ad85cd.dcf08a3",
        "name": "reset/off",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "reset",
                "fromt": "str",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "975f3c13.db982",
        "type": "switch",
        "z": "ad85cd.dcf08a3",
        "name": "off/on",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 80,
        "wires": [
            [
                "84b834a0.2c82f8"
            ],
            []
        ]
    },
    {
        "id": "84b834a0.2c82f8",
        "type": "change",
        "z": "ad85cd.dcf08a3",
        "name": "off/reset",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 80,
        "wires": [
            [
                "265192c1.e0226e",
                "6865d93.1256a28",
                "3cd96359.2e978c"
            ]
        ]
    },
    {
        "id": "2f92b679.bbdb8a",
        "type": "change",
        "z": "ad85cd.dcf08a3",
        "name": "off/reset",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 200,
        "wires": [
            [
                "15f9357e.91cacb",
                "265192c1.e0226e",
                "6865d93.1256a28",
                "c2d9f840.72ff68"
            ]
        ]
    },
    {
        "id": "15f9357e.91cacb",
        "type": "delay",
        "z": "ad85cd.dcf08a3",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 720,
        "y": 200,
        "wires": [
            [
                "265192c1.e0226e",
                "6865d93.1256a28"
            ]
        ]
    },
    {
        "id": "45fe8683.ede378",
        "type": "switch",
        "z": "ad85cd.dcf08a3",
        "name": "off/on/reset",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 310,
        "y": 140,
        "wires": [
            [
                "975f3c13.db982"
            ],
            [
                "3cd96359.2e978c"
            ],
            [
                "3cd96359.2e978c",
                "c2d9f840.72ff68",
                "265192c1.e0226e",
                "6865d93.1256a28"
            ]
        ]
    },
    {
        "id": "8b959a98.378558",
        "type": "ui_template",
        "z": "ce755ade.782f08",
        "group": "35aebfde.5596b",
        "name": "Clock Toolbar",
        "order": 9,
        "width": "0",
        "height": "0",
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    $('#titleScript').parent().hide();\n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.text(d.toLocaleTimeString('de-AT'));\n    }\n\n    \n\n    // Watch the payload and update the title\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            displayTitle(data);\n        });\n        setInterval(upTime,1000);\n    })(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 100,
        "y": 80,
        "wires": [
            []
        ]
    }
]